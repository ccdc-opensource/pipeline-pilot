<?xml version="1.0" encoding="UTF-8"?>
<sci:data xmlns:sci="http://www.SciTegic.com/" object="SciTegic.EvaluateExpression.1">
	<sci:component name="Throw Script Error Message" version="2">
		<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
			<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
			<sci:member>Initial Expression</sci:member>
			<sci:member>Final Expression</sci:member>
			<sci:member>Keep Calculated Properties</sci:member>
			<sci:value>If Property(#prop) Is Defined Then
	#script_err := Property(#prop);

	If #script_err RLike &apos;RuntimeError: &apos; Then
		#lines := RSplit(#script_err, &apos;\n&apos;, &apos;g&apos;);
		#in_err := false;

		#error_msg := &apos;&apos;;
		For #i In 1 .. NumValues(#lines) Loop
			#l := #lines[#i];
			
			If #l RLike &apos;^\s*RuntimeError:&apos; Then
				#in_err := true;
			Elsif #in_err And Trim(#l) Eq &apos;&apos; Then
				#in_err := false;
			End If;
			
			If #in_err Then
				#error_msg .= #l . &quot;\n&quot;;
			End If;
		End Loop;
		Error(#error_msg . &quot;\nFull Message was:\n&quot; . #script_err);
	Else
		Error(&apos;Error running script: &apos; . &quot;\n&quot; . #script_err);
	End If;
End If;
</sci:value>
		</sci:arg>
		<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
			<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
			<sci:value>#prop := Parameter(&apos;Error Property&apos;);</sci:value>
		</sci:arg>
		<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
			<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
		</sci:arg>
		<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
			<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
			<sci:legalval selected="true">True</sci:legalval>
			<sci:legalval>False</sci:legalval>
		</sci:arg>
		<sci:arg name="Error Property" type="StringType" required="true" visibility="visible" multi="false">
			<sci:help>The name of the property containing the error message.</sci:help>
		</sci:arg>
		<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
			<sci:help>Component Attributes</sci:help>
			<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
			<sci:legalval>ComponentReturnsPass</sci:legalval>
			<sci:legalval>ComponentReturnsFail</sci:legalval>
			<sci:legalval>ComponentRunsLocal</sci:legalval>
		</sci:arg>
		<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
			<sci:legalval selected="true">Halt</sci:legalval>
			<sci:legalval>Fail</sci:legalval>
			<sci:legalval>Pass</sci:legalval>
		</sci:arg>
		<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
			<sci:legalval selected="true">Halt</sci:legalval>
			<sci:legalval>Fail</sci:legalval>
			<sci:legalval>Pass</sci:legalval>
		</sci:arg>
		<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
		<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
			<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
			<sci:legalval>True</sci:legalval>
			<sci:legalval selected="true">False</sci:legalval>
		</sci:arg>
		<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
			<sci:help>Version of expression parser to use.</sci:help>
			<sci:value>2</sci:value>
		</sci:arg>
		<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
			<sci:help>The user who registered this component.</sci:help>
			<sci:value>ccdc/csd</sci:value>
		</sci:arg>
		<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
			<sci:help>The date this component was registered.</sci:help>
			<sci:value>Fri Nov 22 11:04:05 2019</sci:value>
		</sci:arg>
		<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
			<sci:value>Throw Script Error Message</sci:value>
		</sci:arg>
		<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
			<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
			<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
		</sci:arg>
		<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
			<sci:help>The component this component is based upon.</sci:help>
			<sci:value>Custom Manipulator (PilotScript)</sci:value>
		</sci:arg>
		<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
			<sci:value>EXPRESSIONNODE</sci:value>
		</sci:arg>
		<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
			<sci:value>0</sci:value>
		</sci:arg>
		<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
			<sci:value>{750968B5-0E81-4AB4-9FE9-8EFC6C5D61EA}</sci:value>
		</sci:arg>
		<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
			<sci:value>90 -95</sci:value>
		</sci:arg>
		<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
			<sci:value>100</sci:value>
			<sci:value>Throw Script Error Message</sci:value>
			<sci:value>&lt;p&gt;Helper component to parse script errors. In particular, this component attempts to find Runtime errors which may relate to licensing, and displays those in a better formatted manner - where the Runtime error is positioned at the top of the message to make it clearer.&lt;/p&gt;</sci:value>
			<sci:value>Generic</sci:value>
			<sci:value/>
			<sci:value>None</sci:value>
			<sci:value/>
			<sci:value>None</sci:value>
			<sci:value/>
		</sci:arg>
		<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
			<sci:help>The server version when this component was registered</sci:help>
			<sci:value>19.1.0.1963</sci:value>
		</sci:arg>
		<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
		<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
			<sci:help>Local Component Identifier</sci:help>
			<sci:value>0</sci:value>
		</sci:arg>
		<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
			<sci:help>The original path within the database of this component.</sci:help>
			<sci:value>fatkinson\ccdc\csd\xml\Components\CSD\Utilities\Throw Script Error Message</sci:value>
		</sci:arg>
	</sci:component>
</sci:data>
