<?xml version="1.0" encoding="UTF-8"?>
<sci:data xmlns:sci="http://www.SciTegic.com/" object="SciTegic.Protocol.1" format="8.0.0">
	<sci:dbitem>
		<sci:component name="06 Combining Hit Sets - NOT" version="2">
			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;/p&gt;

&lt;p&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Web Port to provide a custom user interface for a protocol.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="true">
				<sci:member>__PoolID</sci:member>
			</sci:arg>
			<sci:arg name="__PoolID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; is a case insensitive string that can optionally be set to optimize the speed of execution for quick running protocols.  Multiple protocols with the same value for &lt;i&gt;__PoolID&lt;/i&gt; can share expensive resources such as database connections, Java VMs, memory, etc. reducing the execution time by 1 to 2 seconds per run.  This can give a large speed improvement to protocols that run in a few seconds such as web applications and interactive reports.  Longer running protocols will not see much benefit.  Generally, it is a good idea to use the same &lt;i&gt;__PoolID&lt;/i&gt; for all protocols within a single application such as an interactive report since many of the components, databases, and data structures will be similar.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; can also be specified by the client when the protocol is launched.  If &lt;i&gt;__PoolID&lt;/i&gt; is specified both as a parameter by the client and as a parameter stored within the protocol, the client&apos;s value overrides the stored value.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Reporting" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>This group contains parameters specific to protocols containing Reporting components.</sci:help>
				<sci:member>Reporting Stylesheet</sci:member>
			</sci:arg>
			<sci:arg name="Reporting Stylesheet" type="StylesheetType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>Specifies the name of a Stylesheet to be used by this protocol if any of the Reporting components have a Style selected in the &lt;i&gt;Format&lt;/i&gt; and &lt;i&gt;Position&lt;/i&gt; parameters.</sci:help>
				<sci:value>{44C6ECA7-D7C8-4BD8-A0C6-450FF605F58B}</sci:value>
			</sci:arg>
			<sci:arg name="Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>The Run On Grid parameter tells the server to run the protocol on the grid engine if SES is configured to run with grid integration.</sci:help>
				<sci:member>Queue Name</sci:member>
				<sci:member>Grid Options</sci:member>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
				<sci:help>The Queue Name allows you to specify the name of the queue on the grid engine to submit the job to. Leave blank to specify the default queue.</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Grid Options" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
				<sci:help>Grid Options allows you to specify options to the grid engine submit command. Leave blank to specify the default options.</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
				<sci:help>Component Attributes</sci:help>
				<sci:legalval>ComponentTakesInput</sci:legalval>
				<sci:legalval>ComponentReturnsPass</sci:legalval>
				<sci:legalval>ComponentReturnsFail</sci:legalval>
				<sci:legalval>ComponentRunsLocal</sci:legalval>
			</sci:arg>
			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="WebExports" type="StringType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically 
exported if this protocol is published as a web service.&lt;/p&gt;

&lt;p&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Keep Alive" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Specifies if the process where this protocol is run should stay around for later use.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The user who registered this component.</sci:help>
				<sci:value>ccdc/csd</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The date this component was registered.</sci:help>
				<sci:value>Fri Nov 22 11:04:06 2019</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The server version when this component was registered</sci:help>
				<sci:value>19.1.0.1963</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>06 Combining Hit Sets - NOT</sci:value>
			</sci:arg>
			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol AutoLayout</sci:help>
				<sci:value>1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
				<sci:value>PROTOCOLNODE</sci:value>
			</sci:arg>
			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
				<sci:help>Component Revision</sci:help>
				<sci:value>790</sci:value>
			</sci:arg>
			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>{1655CB87-8213-4C76-A21B-CA206CA66C64}</sci:value>
			</sci:arg>
			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>By Ref</sci:help>
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
				<sci:value>100</sci:value>
				<sci:value>06 Combining Hit Sets - NOT</sci:value>
				<sci:value>&lt;p&gt;This protocol takes the same premise as for &lt;a href=&quot;javascript:DoLink(&apos;{5E1ED5CC-EC69-40F8-B9EB-5005F0B033F5}&apos;)&quot;&gt;05 Combining Hit Sets - AND&lt;/a&gt;, and queries for both a structure and a journal.&lt;/p&gt;

&lt;p&gt;This time the stream of refcodes produced is combined such that the data is passed only if the structure search found it. If the journal search found it, then the record is failed.&lt;/p&gt;

&lt;p&gt;As before, the streams produced are tagged. This time the logic is to pass if tag &quot;A&quot; is defined and tag &quot;B&quot; is not defined.&lt;/p&gt;

&lt;p&gt;Again, the appropriate attributes are retrieved, and the substructure is highlighted in the structures before reporting.&lt;/p&gt;</sci:value>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
			</sci:arg>
			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Scale</sci:help>
				<sci:value>100</sci:value>
			</sci:arg>
			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Sticky Notes</sci:help>
				<sci:value>%VERSION 3%</sci:value>
				<sci:value>1106 -470 1176 705</sci:value>
				<sci:value>255 255 0</sci:value>
				<sci:value>06 Combining Hit Sets - NOT

This protocol takes the same premise as for 05 Combining Hit Sets - AND, and queries for both a structure and a journal.

This time the stream of refcodes produced is combined such that the data is passed only if the structure search found it. If the journal search found it, then the record is failed.

As before, the streams produced are tagged. This time the logic is to pass if tag &quot;A&quot; is defined and tag &quot;B&quot; is not defined.

Again, the appropriate attributes are retrieved, and the substructure is highlighted in the structures before reporting.</sci:value>
			</sci:arg>
			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Options</sci:help>
				<sci:legalval>Owner Access Only</sci:legalval>
			</sci:arg>
			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Local Component Identifier</sci:help>
				<sci:value>-1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>50 -50</sci:value>
			</sci:arg>
			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The original path within the database of this component.</sci:help>
				<sci:value>fatkinson\ccdc\csd\xml\Protocols\CSD\CSD Searching\06 Combining Hit Sets - NOT</sci:value>
			</sci:arg>
		</sci:component>
		<sci:protocol>
			<sci:data object="SciTegic.MDLSDReader.1">
				<sci:component name="SD Reader" version="2">
					<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>The file or URL source to read</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>SourceTag</sci:member>
						<sci:member>Keep Properties</sci:member>
						<sci:member>UTF-8 Auto Detect</sci:member>
						<sci:value>data\Queries\BenzodiazepineCore.mol</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
					</sci:arg>
					<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called 
&lt;b&gt;SourceTag&lt;/b&gt; is created and holds the value indicated.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;None&lt;/b&gt;: 
No SourceTag property is created and any existing ones are removed.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Filename&lt;/b&gt;: 
The name of the file read.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FilenameAndExtension&lt;/b&gt;: The name of the 
file read with its file extension.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FullFilename&lt;/b&gt;: The name of the 
file read, including the directory path.&lt;/li&gt;&lt;li&gt;&lt;b&gt;ZipFilename&lt;/b&gt;: When reading 
a compressed zip file, the filename within the compressed archive.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Number&lt;/b&gt;: 
When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;&lt;li&gt;&lt;b&gt;Letter&lt;/b&gt;: 
When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;&lt;li&gt;&lt;b&gt;KeepCurrent&lt;/b&gt;: 
Keeps the current value of SourceTag.&lt;/li&gt;&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Filename</sci:legalval>
						<sci:legalval>FilenameAndExtension</sci:legalval>
						<sci:legalval>FullFilename</sci:legalval>
						<sci:legalval>ZipFilename</sci:legalval>
						<sci:legalval>Number</sci:legalval>
						<sci:legalval>Letter</sci:legalval>
						<sci:legalval>KeepCurrent</sci:legalval>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
						<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.</sci:help>
					</sci:arg>
					<sci:arg name="UTF-8 Auto Detect" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;UTF-8 is a type of character encoding used to represent international characters with multiple bytes whereas basic Latin characters remain as a single byte.  Files can be stored with a Byte Order Mark (BOM) to indicate that the type of character encoding.&lt;/p&gt;
&lt;p&gt;When reading files that do not have a BOM, this parameter allows the reader to attempt to automatically detect UTF-8 encodings and convert as needed.  However, be aware that automatic detection is not always reliable.  In some cases, valid text stored in different character encodings can appear to be valid UTF-8.  In these cases, the automatic detection will result in garbled text.  When this occurs, you can consider using the &lt;a href=&quot;javascript:DoLink(&apos;{B0B1B56C-3DF6-444C-BB78-B43211188F63}&apos;)&quot;&gt;Binary Reader&lt;/a&gt; to read the file, then converting using the Pilotscript function &lt;b&gt;ConvertBytesToString&lt;/b&gt;&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>ReadProperties</sci:member>
						<sci:member>PutNameInProperty</sci:member>
						<sci:member>ReadQueryInfo</sci:member>
						<sci:member>PutCommentInProperty</sci:member>
						<sci:member>SD Format Options</sci:member>
						<sci:member>Global Templates</sci:member>
					</sci:arg>
					<sci:arg name="SD Format Options" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>&lt;p&gt;Options available for the SD Reader:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Properties Can Contain $$$$:&lt;/b&gt;  By the CTFile standard, a property can contain a &apos;$$$$&apos;-line.  
Properties or data field values are terminated by a blank line.  Only then will the &apos;$$$$&apos;-line 
terminate the full data block.  Setting this option off will terminate the data block upon any read of 
a &apos;$$$$&apos;-line.  This option is available to provide compatibility with some 3rd Party SD files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;One-space Lines Terminate Properties:&lt;/b&gt;  By the CTFile standard, properties or data fields values are 
terminated by a blank line. Selecting this option will terminate the data block when encountering a line 
containing a space as the only character in the line.  This option is available to provide compatibility 
with some 3rd Party SD files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Unwrap Long Property Lines:&lt;/b&gt;  By the CTFile standard, lines in property fields cannot exceed 200 characters.  When this option is selected and a property line of exactly 200 characters is found, the newline character will be ignored and property string will continue on the next line.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Read Unknown Stereo Parity:&lt;/b&gt;  When selected, the SD Reader will use the &apos;Atom Parity&apos; value (parity of 
&apos;3&apos;) to mark unknown stereo centers in 3D mol files.  This will leave these atoms marked as 
&apos;unknown stereo&apos; and will not calculate the stereo from the coordinates.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Process Complex Data Header Lines:&lt;/b&gt; Data header lines are the lines in the SD format that precede the actual data. They can contain the data field name (enclosed in angular brackets &lt;&gt;), the data field number (as DTn), the external registry number (enclosed in parentheses), and other optional information. When this parameter is set to False, only the data field name is parsed and used to set the corresponding property name. All the other information in the line is ignored. When the parameter is set to true, all the information is parsed. The property name is set from either the field name in &lt;&gt; or the DTn. If both are present the field name takes priority and the DTn number is saved as an additional property named &lt;b&gt;FieldName#DTn&lt;/b&gt;. The external registry number is saved as &lt;b&gt;FieldName#ExtRegNum&lt;/b&gt; and any other information is saved as &lt;b&gt;FieldName#OtherDataFieldInfo&lt;/b&gt;. When the molecules are written to an SD file, the data header lines are reconstructed from these properties. The default state of this parameter is False, as parsing, preserving, and eventually writing all the information in the data header lines can be costly, specially for SD files with many data fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert From H2 And H+ Atom Types:&lt;/b&gt; &apos;H2&apos; and &apos;H+&apos; are two non-standard element types that can be assigned to atoms by the Accelrys Draw sketcher. They represent unattached Hydrogen (a Hydrogen molecule) and charged Hydrogen (a proton), respectively. When this parameter is selected, these atom types are converted to standard hydrogen atoms upon reading, with charges of 0 for H2 and +1 for H+. Otherwise, these atoms are read and perceived as unknown atom types, with &apos;H2&apos; and &apos;H+&apos; as the atom labels.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert Radicals To Pi Systems:&lt;/b&gt; When selected, pi bonds will be perceived between adjacent atoms marked with radicals and any adjacent metal atom.  Once pi bonds are perceived, subsequent exports will represent the pi bonds using the V3000 format and one-to-many coordination bonds (type 9) unless the writer&apos;s &lt;i&gt;Convert Pi Systems To Radicals&lt;/i&gt; option is used to convert the pi systems back. &lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert GEN+DAT to Polymer Repeat Units:&lt;/b&gt; When selected, this option will automatically convert input GEN sgroups with linked DAT sgroups having the special fieldname of &apos;rc&apos; and numeric or numeric range data internally into polymer repeat sgroups.  This usage is a special type of NONS (Non-Specific Structure) convention that was prototyped in previous releases.  Disabling this conversion will have a higher likelihood of producing a structure that can be registered into Direct databases. &lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Properties Can Contain $$$$</sci:legalval>
						<sci:legalval>One-space Lines Terminate Properties</sci:legalval>
						<sci:legalval selected="true">Unwrap Long Property Lines</sci:legalval>
						<sci:legalval>Read Unknown Stereo Parity</sci:legalval>
						<sci:legalval>Process Complex Data Header Lines</sci:legalval>
						<sci:legalval selected="true">Convert From H2 And H+ Atom Types</sci:legalval>
						<sci:legalval>Convert Radicals To Pi Systems</sci:legalval>
						<sci:legalval selected="true">Convert GEN+DAT to Polymer Repeat Units</sci:legalval>
					</sci:arg>
					<sci:arg name="ReadProperties" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Select True to read the properties for each molecule (in addition to the structures)</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ReadQueryInfo" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If properties starting with &quot;QueryInfo&quot; are present, use them to set up query information on the atoms and bonds. (This is how, for example, SMARTS query information can be preserved when writing to an SD format file.) For molecules saved in MOL/SD format, this information only contains information that cannot be written out in the connection table.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="PutNameInProperty" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>What to call the property that holds the name of each molecule</sci:help>
						<sci:value>Name</sci:value>
					</sci:arg>
					<sci:arg name="PutCommentInProperty" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>What to call the property that holds the comment associated with each molecule</sci:help>
					</sci:arg>
					<sci:arg name="Global Templates" type="URLType" required="false" visibility="visible" multi="false">
						<sci:help>V3000 SD or MOL files containing template definitions for amino acid, nucleic acid or other residues or monomers. These templates can then be refered to by molecules read by the SD reader.&lt;p&gt;
The default template file included in the Chemistry collection, &lt;i&gt;data\Direct\Direct_templates.mol&lt;/i&gt; contains definitions for 22 amino acids and 8 DNA and RNA templates.</sci:help>
						<sci:value>data\Direct\Direct_templates.mol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="HasConvertPiSystemOption" type="BoolType" required="false" visibility="nevershow" multi="false" legalvalsenforced="false">
						<sci:help>Hidden flag specifying the presence of the &quot;Convert Radicals To Pi Systems&quot; option.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="AllowUnknownDoubleBondsFromCoordinates" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>According to the CTfile specifications, the cis/trans character of double bonds with bond stereo set to zero is determined from the coordinates. This parameter controls whether or not to assign unknown bond stereo to double bonds for which the stereo could not be determined from the coordinates, either because there are no coordinates or because of colinearity issues.  When the parameter is set to False and the stereo could not be determined, no specific stereo configuration is assigned to the double bond, but it is not marked as unknown stereo.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/chemistry</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu May 30 14:34:37 2013</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Read Benzodiazepine Core</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{CA65B896-4FE6-4E3A-B884-DC16B53B8D26}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SD Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Reads MOL (molecule CTAB) files and SD (structured data) files</sci:value>
						<sci:value>&lt;p&gt;Creates a molecular data record for each molecule represented in the &lt;i&gt;Source&lt;/i&gt; 
data file.  All properties contained in the file are read into the data records.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;This 
component can also read zipped (.zip) and URL-based files.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;See 
Also:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;To write files in MOL or SD format, use the &lt;a href=&quot;javascript:DoLink(&apos;{DC8EE7B0-0620-42FE-944C-B4CD1E79480E}&apos;)&quot;&gt;SD 
Writer&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;To convert a molecule to and from between text properties in CTAB 
format, use &lt;a href=&quot;javascript:DoLink(&apos;{E622FBD9-9FA9-451A-A102-1800B5F28B6D}&apos;)&quot;&gt;Molecule 
to CTAB&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{7D354B65-DDD8-4EA4-83A7-21501A8A6852}&apos;)&quot;&gt;Molecule 
from CTAB&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Other related CTFile format file readers include &lt;a href=&quot;javascript:DoLink(&apos;{169AB4E5-A470-477B-AA65-50464411036C}&apos;)&quot;&gt;RG 
Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{036731AA-0015-4606-9750-7D9D020F21C8}&apos;)&quot;&gt;RXN 
Reader&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{55431CCB-06EA-4741-B95B-633C877E3E9B}&apos;)&quot;&gt;RD 
Reader&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Molecule</sci:value>
						<sci:value>Data fields in the SD file will be added to the property fields</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.0.1.28</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Chemistry\Data Access and Manipulation\Readers\SD Reader</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="CSD Structure Search" version="2">
					<sci:arg name="Search Type" type="StringType" required="true" visibility="visible" multi="false">
						<sci:legalval>Exact</sci:legalval>
						<sci:legalval selected="true">Substructure</sci:legalval>
						<sci:legalval>Similarity</sci:legalval>
					</sci:arg>
					<sci:arg name="Similarity Threshold" type="DoubleType" required="true" visibility="visible" multi="false">
						<sci:help>The similarity threshold to use, in the case of a similarity search. This is used as the minimum threshold - in other words, all compounds retrieved will have a similarity of this value or above when a similarity search is selected.</sci:help>
						<sci:validscript>#value := Parameter();

SetInvalidDetails(&apos;Value must be between 0 and 1, inclusive&apos;);

#value &gt; 0 And #value &lt;= 1;</sci:validscript>
						<sci:enabledscript>Parameter(&apos;Search Type&apos;) Eq &apos;Similarity&apos;</sci:enabledscript>
						<sci:value>0.7</sci:value>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
						<sci:value>tmp_query, tmp_results</sci:value>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>_structure_search, _type, _threshold</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval>False</sci:legalval>
						<sci:legalval selected="true">True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>CSD Substructure Search</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DatabaseNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{AFC2F7D8-B4D3-4FFE-9B67-97CB4D1B6344}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>378 -95</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>CSD Structure Search</sci:value>
						<sci:value>&lt;p&gt;
Perform a substructure or exact match search on the CSD. Incoming molecules are treated as queries. The records for which CSD compounds are found is output with the CSD refcode, the structure for the hit, as well as the SMILES string for the query which retrieved that hit. This can be useful when passing in multiple queries.
&lt;/p&gt;
&lt;p&gt;
The records for which no CSD compounds were found are produced from the fail port.
&lt;p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.1.0.13</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>75</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>ccdc/csd</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Jan 10 16:11:42 2017</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\CSD\Readers\CSD Structure Search</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Tag Data" version="2">
					<sci:arg name="TagName" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Name of a new property to create to serve as a tag</sci:help>
						<sci:value>A</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
					</sci:arg>
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
						<sci:value>Property(&apos;$(TagName)&apos;) := true;</sci:value>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)
</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="nevershow" multi="false">
						<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Sep 15 09:21:22 2006</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Tag Data</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>COMPONENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Evaluate Expression</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{BCF71EB2-1ED7-4B27-B263-BA531EABFC9C}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>666 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Tags data records with a specified property name for later identification</sci:value>
						<sci:value>&lt;p&gt;For each incoming data record, a new property is created and assigned a value of True.  The name of the property is specified by &lt;i&gt;TagName&lt;/i&gt;.  Data records tagged in this way can be identified in downstream components by checking whether the property is defined. This is useful for marking a data stream prior to combining it with other streams for learning or other operations.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;An alternative method for tagging records is available in most reader component by using &lt;i&gt;SourceTag&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To remove a tag, use &lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;To separate tagged data records into a separate data stream, use &lt;a href=&quot;javascript:DoLink(&apos;{F69870E0-BAF7-43E4-8B09-F53C47DB94F3}&apos;)&quot;&gt;Remove Tagged Filter&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To group data together by tag for use in run-to-completion subprotocols, use &lt;a href=&quot;javascript:DoLink(&apos;{3FDE8197-D86F-4EB0-99FF-82D6430AF466}&apos;)&quot;&gt;Group Data by Tag&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records with the additional tag property</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>6.0.0.46</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Manipulators\Tag Data</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.MergeProperties.1">
				<sci:component name="Merge Data" version="2">
					<sci:arg name="MergeUsing" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
						<sci:member>MergeUsingListType</sci:member>
						<sci:member>MergePropertyType</sci:member>
						<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
						<sci:member>IgnoreCase</sci:member>
						<sci:value>csd_refcode</sci:value>
					</sci:arg>
					<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UseFirstDefinedValue: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatenation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>UseFirstDefinedValue</sci:legalval>
						<sci:legalval selected="true">UseAllValues</sci:legalval>
					</sci:arg>
					<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:legalval>IsNumeric</sci:legalval>
						<sci:legalval selected="true">IsText</sci:legalval>
						<sci:legalval>IsDate</sci:legalval>
						<sci:legalval>IsFingerprint</sci:legalval>
					</sci:arg>
					<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;MergeUsing&lt;/i&gt; property values.&lt;/p&gt;
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
						<sci:member>WhenMerging</sci:member>
						<sci:member>KeepAllNullString</sci:member>
						<sci:member>KeepAllPreferredNodeName</sci:member>
						<sci:member>PrefixUsingProperty</sci:member>
						<sci:member>Data Are Sorted</sci:member>
						<sci:legalval selected="true">KeepAll</sci:legalval>
						<sci:legalval>KeepFirst</sci:legalval>
					</sci:arg>
					<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;When merging using KeepAll behavior, provides fine control over how multiple values are treated.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
						<sci:legalval>OverwriteOrCreate</sci:legalval>
						<sci:legalval>OverwriteExisting</sci:legalval>
						<sci:legalval>CreateIfNew</sci:legalval>
						<sci:legalval selected="true">AppendOrCreate</sci:legalval>
						<sci:legalval>AppendExisting</sci:legalval>
					</sci:arg>
					<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;This string is used during append using KeepAll &lt;i&gt;MergeBehavior&lt;/i&gt; to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
						<sci:value>None</sci:value>
					</sci:arg>
					<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If defined, and &lt;i&gt;MergeBehavior&lt;/i&gt; is KeepAll, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first record with a given merge value is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
						<sci:value>Molecule</sci:value>
					</sci:arg>
					<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;When multiple values for a property are retained (under KeepAll merge behavior), the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
					</sci:arg>
					<sci:arg name="Data Are Sorted" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies whether the input data are already sorted by the &lt;i&gt;MergeUsing&lt;/i&gt; properties. If so, then the merge can be done much faster with less memory impact. Use this option only if you are certain that the input data are sorted.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you set &lt;i&gt;Data Are Sorted&lt;/i&gt; to True and the input data are &lt;b&gt;not&lt;/b&gt; sorted, an error is generated.
&lt;/ul&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="OutputFrequency" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual records included in the resulting merged record.&lt;/p&gt;
</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Mar 15 13:01:38 2011</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;MergeUsing&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>if (strlength(trim(parameter(&apos;MergeUsing&apos;, 2))) &gt; 0) then
	&quot;Merge on &quot; . trim(parameter(&apos;MergeUsing&apos;, 2));
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Merge Data</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>JOINNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>954 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Merges properties of all data records that share the same key property value into a single data record</sci:value>
						<sci:value>&lt;p&gt;Incoming data records are merged into a single data record if they have the same value for the &lt;i&gt;MergeUsing&lt;/i&gt; property.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Multiple &lt;i&gt;MergeUsing&lt;/i&gt; properties can be specified.  In this case, data records are merged if the value for each &lt;i&gt;MergeUsing&lt;/i&gt; property matches across the data records.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge records based on molecular structures, use &lt;a href=&quot;javascript:DoLink(&apos;{2E21E16B-6901-46F3-8780-F14D3D7057CE}&apos;)&quot;&gt;
Merge Molecules&lt;/a&gt; (which requires the Chemistry Collection).&lt;/p&gt;
&lt;/ul&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records that contain the properties being used for merging</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records that do not contain the properties being used for merging</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>8.4.5.20</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
						<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>3</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Manipulators\Merge Data</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Filter (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>The PilotScript expression used to filter the data.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>#pass := A Is Defined and B Is Not Defined;

If #pass Then
	Remove(&apos;A&apos;, &apos;B&apos;);
End If;

#pass;</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Is From Set A NOT Set B?</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>FILTERNODE</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Filter (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1242 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
						<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>4</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Filters\Custom Filter (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:proplist>
					<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
				</sci:proplist>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Get CSD Entry Attributes" version="2">
					<sci:arg name="CSD Refcode Property" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>CSD Refcode Property</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>The property which contains the CSD refcode value. This defaults to csd_refcode.</sci:help>
						<sci:value>csd_refcode</sci:value>
					</sci:arg>
					<sci:arg name="Options" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>Various options supported by the join.</sci:help>
						<sci:legalval selected="true">Output unfound compounds from fail port</sci:legalval>
					</sci:arg>
					<sci:arg name="Attributes" type="StringType" required="true" visibility="visible" multi="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Attributes</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>The list of attributes to read from the entry identified by the refcode.</sci:help>
						<sci:legalval>Bioactivity</sci:legalval>
						<sci:legalval>Calculate Density</sci:legalval>
						<sci:legalval>CCDC Number</sci:legalval>
						<sci:legalval>Chemical Name</sci:legalval>
						<sci:legalval>Color</sci:legalval>
						<sci:legalval>Deposition Date</sci:legalval>
						<sci:legalval>Disorder Details</sci:legalval>
						<sci:legalval>DOI</sci:legalval>
						<sci:legalval>Formula</sci:legalval>
						<sci:legalval>Habit</sci:legalval>
						<sci:legalval>Has 3D Structure</sci:legalval>
						<sci:legalval>Has Disorder</sci:legalval>
						<sci:legalval>Is Organic</sci:legalval>
						<sci:legalval>Is Organometallic</sci:legalval>
						<sci:legalval>Is Polymeric</sci:legalval>
						<sci:legalval>Is Powder Study</sci:legalval>
						<sci:legalval>Melting Point</sci:legalval>
						<sci:legalval>Peptide Sequence</sci:legalval>
						<sci:legalval>Phase Transition</sci:legalval>
						<sci:legalval>Polymorph</sci:legalval>
						<sci:legalval>Pressure</sci:legalval>
						<sci:legalval selected="true">Publications</sci:legalval>
						<sci:legalval>Remarks</sci:legalval>
						<sci:legalval>Solvent</sci:legalval>
						<sci:legalval>Synonyms</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>_attributes, _script</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Get CSD Entry Attributes</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DatabaseNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{A2DA55F8-8ED8-4917-9AD2-18DF2C71CEC3}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1530 -95</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Get CSD Entry Attributes</sci:value>
						<sci:value>&lt;p&gt;
Retrieve entry attributes for a set of CSD refcodes.
&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.1.0.13</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>75</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>ccdc/csd</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Jan 10 16:09:59 2017</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>5</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\CSD\Readers\Get CSD Entry Attributes</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Get CSD Molecule Attributes" version="2">
					<sci:arg name="CSD Refcode Property" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>CSD Refcode Property</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>The property which contains the CSD refcode value. This defaults to csd_refcode.</sci:help>
						<sci:value>csd_refcode</sci:value>
					</sci:arg>
					<sci:arg name="Options" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>Various options supported by the join.</sci:help>
						<sci:legalval selected="true">Output unfound compounds from fail port</sci:legalval>
					</sci:arg>
					<sci:arg name="Attributes" type="StringType" required="true" visibility="visible" multi="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Attributes</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>The list of attributes to read from the molecule identified by the refcode.</sci:help>
						<sci:legalval selected="true">CTAB</sci:legalval>
						<sci:legalval>Formal Charge</sci:legalval>
						<sci:legalval>Formula</sci:legalval>
						<sci:legalval>Heavy Atoms</sci:legalval>
						<sci:legalval>Is 3D</sci:legalval>
						<sci:legalval>Is Organometallic</sci:legalval>
						<sci:legalval>Is Polymeric</sci:legalval>
						<sci:legalval>Largest Ring Size</sci:legalval>
						<sci:legalval>MOL2</sci:legalval>
						<sci:legalval>Molecular Weight</sci:legalval>
						<sci:legalval>SMILES</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>_attributes, _script</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Get CSD Molecule Attributes</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DatabaseNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{4353BE77-5678-4BE8-A7CF-C05A299C6DE1}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1818 -95</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Get CSD Molecule Attributes</sci:value>
						<sci:value>&lt;p&gt;
Retrieve molecule attributes for a set of CSD refcodes. This corresponds to gathering the attributes found on the &lt;code&gt;ccdc.molecule.Molecule&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The ccdc.molecule.Molecule class contains attributes relating to the chemistry of the molecule, for example the SMILES representation.&lt;/p&gt;
&lt;p&gt;In some cases a molecule may not have a canonical SMILES representation - where the structure has unknown atoms or bonds. In these cases the value will be None. For example, &lt;code&gt;AJABIX01&lt;/code&gt;. In such cases, the SMILES property will be removed to avoid attempting to interpret None as a SMILES.&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.1.0.13</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>75</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>ccdc/csd</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Jan 13 09:58:32 2017</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>6</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\CSD\Readers\Get CSD Molecule Attributes</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.CTabParser">
				<sci:component name="Molecule from CTAB" version="2">
					<sci:arg name="FromProperty" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>Name of the property that contains the connection table text in MOL format</sci:help>
						<sci:member>PutCommentInProperty</sci:member>
						<sci:member>PutNameInProperty</sci:member>
						<sci:member>SD Format Options</sci:member>
						<sci:member>Global Templates</sci:member>
						<sci:value>ctab</sci:value>
					</sci:arg>
					<sci:arg name="PutNameInProperty" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>What to call the property that holds the name of each molecule extracted from the CTAB data</sci:help>
					</sci:arg>
					<sci:arg name="PutCommentInProperty" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>What to call the property that holds the comment of each molecule</sci:help>
					</sci:arg>
					<sci:arg name="SD Format Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>&lt;p&gt;Options available for the SD Reader:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Read Unknown Stereo Parity:&lt;/b&gt;  When selected, the SD Reader will use the &apos;Atom Parity&apos; value (parity of &apos;3&apos;) to mark unknown stereo centers in 3D mol files.  This will leave these atoms marked as &apos;unknown stereo&apos; and will not calculate the stereo from the coordinates.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert From H2 And H+ Atom Types:&lt;/b&gt; &apos;H2&apos; and &apos;H+&apos; are two non-standard element types that can be assigned to atoms by the Accelrys Draw sketcher. They represent unattached Hydrogen (a Hydrogen molecule) and charged Hydrogen (a proton), respectively. When this parameter is selected, these atom types are converted to standard hydrogen atoms upon reading, with charges of 0 for H2 and +1 for H+. Otherwise, these atoms are read and perceived as unknown atom types, with &apos;H2&apos; and &apos;H+&apos; as the atom labels.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert Radicals To Pi Systems:&lt;/b&gt; When selected, pi bonds will be perceived between adjacent atoms marked with radicals and any adjacent metal atom.  Once pi bonds are perceived, subsequent exports will represent the pi bonds using the V3000 format and one-to-many coordination bonds (type 9) unless the writer&apos;s &lt;i&gt;Convert Pi Systems To Radicals&lt;/i&gt; option is used to convert the pi systems back.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert GEN+DAT to Polymer Repeat Units:&lt;/b&gt; When selected, this option will automatically convert input GEN sgroups with linked DAT sgroups having the special fieldname of &apos;rc&apos; and numeric or numeric range data internally into polymer repeat sgroups.  This usage is a special type of NONS (Non-Specific Structure) convention that was prototyped in previous releases.  Disabling this conversion will have a higher likelihood of producing a structure that can be registered into Direct databases.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>Read Unknown Stereo Parity</sci:legalval>
						<sci:legalval selected="true">Convert From H2 And H+ Atom Types</sci:legalval>
						<sci:legalval>Convert Radicals To Pi Systems</sci:legalval>
						<sci:legalval selected="true">Convert GEN+DAT to Polymer Repeat Units</sci:legalval>
					</sci:arg>
					<sci:arg name="Global Templates" type="URLType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>V3000 SD or MOL files containing template definitions for amino acid, nucleic acid or other residues or monomers. These templates can then be refered to by molecules read by the SD reader.&lt;p&gt;
The default template file included in the Chemistry collection, &lt;i&gt;data\Direct\Direct_templates.mol&lt;/i&gt; contains definitions for 22 amino acids and 8 DNA and RNA templates.</sci:help>
						<sci:value>data\Direct\Direct_templates.mol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="HasConvertPiSystemOption" type="BoolType" required="false" visibility="nevershow" multi="false" legalvalsenforced="false">
						<sci:help>Hidden parameter signalling the presence of the &quot;Convert Radicals To Pi Systems&quot; check box in SD Format Options</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="AllowUnknownDoubleBondsFromCoordinates" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>According to the CTfile specifications, the cis/trans character of double bonds with bond stereo set to zero is determined from the coordinates. This parameter controls whether or not to assign unknown bond stereo to double bonds for which the stereo could not be determined from the coordinates, either because there are no coordinates or because of colinearity issues.  When the parameter is set to False and the stereo could not be determined, no specific stereo configuration is assigned to the double bond, but it is not marked as unknown stereo.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/chemistry</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu May 30 14:50:47 2013</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Molecule from CTAB</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Molecule from CTAB</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>COMPONENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{7D354B65-DDD8-4EA4-83A7-21501A8A6852}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2106 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Converts a CTAB text property to a molecule</sci:value>
						<sci:value>Builds a molecular representation for each data record from the CTFile connection table found 
as text in the property list. If a molecular representation already exists for a data record, it is overwritten 
by the new molecule. The CTAB property is removed from the data record.&lt;p&gt;&lt;b&gt;See also:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;To 
obtain a text property containing the CTAB representation of a molecule use &lt;a href=&quot;javascript:DoLink(&apos;{E622FBD9-9FA9-451A-A102-1800B5F28B6D}&apos;)&quot;&gt;Molecule 
to CTAB&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;To read a MOL or SD file use &lt;a href=&quot;javascript:DoLink(&apos;{CA65B896-4FE6-4E3A-B884-DC16B53B8D26}&apos;)&quot;&gt;SD 
Reader&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Molecule</sci:value>
						<sci:value>Molecular data record created from CTAB text property</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.0.1.28</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>10</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Chemistry\Data Access and Manipulation\Converters\Molecule From Text\Molecule from CTAB</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.CalculateSGMap.1">
				<sci:component name="Substructure Map" version="2">
					<sci:arg name="Query Source" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>The source of queries:
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;From Tag:&lt;/b&gt; Queries are molecules in the input stream that have been tagged with the property name specified by the &lt;i&gt;Query Tag&lt;/i&gt;  parameter. Queries must occur in the input stream before targets.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;From File:&lt;/b&gt; Queries are read from the list of files specified by the &lt;i&gt;Source&lt;/i&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:member>Query Tag</sci:member>
						<sci:member>Source</sci:member>
						<sci:legalval selected="true">From File</sci:legalval>
						<sci:legalval>From Tag</sci:legalval>
					</sci:arg>
					<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>The file specifying the substructure(s) to search for.</sci:help>
						<sci:member>Source Component</sci:member>
						<sci:enabledscript>parameter(&quot;Query Source&quot;) eq &quot;From File&quot;</sci:enabledscript>
						<sci:value>data\Queries\BenzodiazepineCore.mol</sci:value>
					</sci:arg>
					<sci:arg name="Source Component" type="ComponentType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>Name of the component to read the source file.</sci:help>
						<sci:value>File Reader</sci:value>
					</sci:arg>
					<sci:arg name="Query Tag" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>The Query Tag is the property name used to
detect an incoming query. All queries on the input stream must carry this tag.</sci:help>
						<sci:enabledscript>parameter(&quot;Query Source&quot;) eq &quot;From Tag&quot;</sci:enabledscript>
						<sci:value>IsQuery</sci:value>
					</sci:arg>
					<sci:arg name="Map Type" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Whether to output &quot;All Mappings&quot; (for example, Benzene would map onto 
itself 12 ways), or &quot;Unique Mappings&quot; (no two mappings contain an identical set of atoms, so Benzene would return one mapping).
</sci:help>
						<sci:legalval selected="true">Unique Mappings</sci:legalval>
						<sci:legalval>All Mappings</sci:legalval>
					</sci:arg>
					<sci:arg name="Map Output" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>Specifies the properties to output:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;NumQueries:&lt;/b&gt; The number of queries&lt;/li&gt;
&lt;li&gt;&lt;b&gt;NumQueriesMapped:&lt;/b&gt; The number of queries that successfully mapped&lt;/li&gt;
&lt;li&gt;&lt;b&gt;QueriesMapped:&lt;/b&gt; The name of the queries that successfully mapped&lt;/li&gt;
&lt;li&gt;&lt;b&gt;NumTimesQueriesMapped:&lt;/b&gt; The number of times each successfully mapped query mapped the target&lt;/li&gt;
&lt;li&gt;&lt;b&gt;AtomToAtomMaps:&lt;/b&gt; If &lt;i&gt;SeparateQueryOutputs&lt;/i&gt; is &apos;True&apos;, atom-to-atom mappings are added in properties that begin with the query name and end with &quot;_Maps&quot; or &quot;_AllMapped&quot;.
&lt;br&gt;
&quot;_Maps&quot; contains an array of the individual mappings. Each mapping contains the indices of the target atoms that map onto the corresponding query atoms.
&lt;br&gt;
&quot;_AllMapped&quot; contains the indices of all target atoms that are mapped by the query, in ascending order.
&lt;br&gt;
If &lt;i&gt;SeparateQueryOutputs&lt;/i&gt; is &apos;False&apos;, the individual mappings for all queries are placed in &lt;b&gt;Query_Maps&lt;/b&gt;, and the list of all mapped target atoms in &lt;b&gt;Query_AllMapped&lt;/b&gt;.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;BondToBondMaps:&lt;/b&gt; If &lt;i&gt;SeparateQueryOutputs&lt;/i&gt; is &apos;True&apos;, bond-to-bond mappings are added in properties that begin with the query name and end with &quot;_BondMaps&quot; or &quot;_AllBondsMapped&quot;.
&lt;br&gt;
&quot;_BondMaps&quot; contains an array of the individual mappings. Each mapping contains the indices of the target bonds that map onto the corresponding query bonds.
&lt;br&gt;
&quot;_AllBondsMapped&quot; contains the indices of all target bonds that are mapped by the query, in ascending order.
&lt;br&gt;
If &lt;i&gt;SeparateQueryOutputs&lt;/i&gt; is &apos;False&apos;, the individual mappings for all queries are placed in &lt;b&gt;Query_BondMaps&lt;/b&gt;, and the list of all mapped target bonds in &lt;b&gt;Query_AllBondsMapped&lt;/b&gt;.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;RMSD:&lt;/b&gt; Root mean squared deviation between the coordinates of the mapped atoms in the query and in the target. No alignment is performed between query and target. The rmsd is calculated using the original coordinates. This option is commonly used to calculate rmsd between prealigned molecules.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>NumQueries</sci:legalval>
						<sci:legalval>NumQueriesMapped</sci:legalval>
						<sci:legalval>QueriesMapped</sci:legalval>
						<sci:legalval>NumTimesQueriesMapped</sci:legalval>
						<sci:legalval selected="true">AtomToAtomMaps</sci:legalval>
						<sci:legalval>BondToBondMaps</sci:legalval>
						<sci:legalval>RMSD</sci:legalval>
					</sci:arg>
					<sci:arg name="Search Options" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>Options for substructure searching. For maximum compatibility with the Direct cartridge, select the first seven options.

The following options are available for use with all queries:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Uncharged Atoms Can Map Charged Atoms&lt;/b&gt;: Allow uncharged query atoms to map onto charged target atoms.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;NonChiral Queries are Enantiomers&lt;/b&gt;: Queries containing stereoatoms are considered as a mixture of enantiomers 
rather than absolute.&lt;p&gt;For molecules with relative stereo groups (Accelrys Enhanced Stereo), this flag 
controls whether or not to check all the possible stereo configurations represented by the relative stereo 
groups when checking stereo. When the flag is OFF, only the actual stereo configurations present in the 
molecules (as drawn) are compared. When the flag is ON, all the possible combinations of stereo configurations 
for the query and the target are compared to look for a match.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Chiral Queries Only Map Chiral Targets&lt;/b&gt;: A query marked Chiral can map only onto targets marked Chiral.&lt;p&gt;For molecules with relative stereo groups (Accelrys Enhanced Stereo), this flag controls whether or not check 
the types of stereo groups when checking stereo. When the flag is OFF, all stereo groups (ABS, OR, AND) 
are allowed to map each other. When the flag is ON, the matching rules for the relative stereo groups 
are:
&lt;ul&gt;&lt;li&gt;ABS group in query can only map ABS group in target&lt;/li&gt;
&lt;li&gt;OR groups in query can map OR and ABS groups in target&lt;/li&gt;
&lt;li&gt;AND groups in query can map AND, OR, and ABS groups in target.&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Ignore Stereo in 3D Queries&lt;/b&gt;: When set, the stereochemistry implicit in three-dimensional coordinates is not used during mapping, only stereochemistry defined using up or down wedge bonds is used.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Check Bonds To RAtoms&lt;/b&gt;:  Toggles the check of query features (e.g. order, Chain/Ring) on bonds to RAtoms.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Match Sgroups&lt;/b&gt;: When checked, component, mixture, formulation and data Sgroups are considered during mapping.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Marked Isotopes Only Map Marked Isotopes&lt;/b&gt;: When set, query atoms with isotopes marked will only map target atoms that have their isotopes marked.  This is true even if the isotope marked matches natural abundance.  That is, &quot;16O&quot; maps &quot;16O&quot; but not O.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Unmarked Isotopes Only Map Unmarked Isotopes&lt;/b&gt;: When set, query atoms with isotopes unmarked will only map target atoms that also have their isotopes unmarked.  That is, &quot;O&quot; maps &quot;O&quot;, but will not map either &quot;16O&quot; or &quot;18O&quot;.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Ignore Isotopes&lt;/b&gt;: Toggles whether to check isotope query features.  Enabling this overrides other isotope options.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Use Localized Aromatic Bonds&lt;/b&gt;:  &quot;Localized&quot; aromatic bonds are bonds for which all kekule 
representations have the bond always the same type (single or double).  For example, the single and double 
bonds in pyrrole are localized, while the bonds in pyridine are not. Setting this option allows single or double bond 
queries to map onto localized aromatic bonds.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Stereo Atoms Can Map Nonstereo Atoms&lt;/b&gt;: Marked stereoatoms must map onto stereo-appropriate atoms in the targets, instead of being allowed to also map onto unknown or unmarked atoms.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Match Cis Trans Double Bonds&lt;/b&gt;: Toggles the checking of double-bond stereo.  When this option is not 
checked, only the stereo for double bonds flagged with the stereo-care query feature will be checked.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Ignore Reaction Mappings&lt;/b&gt;: Toggles whether to ignore a reaction&apos;s atom-atom mappings and bond-status 
flags when matching against a reaction query.  When checked, only a substructure match is performed.&lt;/li&gt;
&lt;/ul&gt;

The following options are only available for non-markush targets and for queries which do not contain polymer or markush features:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;HFill if RAtoms Found&lt;/b&gt;: If RAtoms are found in the query, hydrogen-fill all other atoms; allow substituents 
only in the locations marked by the RAtoms.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Interpret RAtoms Literally&lt;/b&gt;: Treat R atoms as literal atoms, rather than as query types. Useful for searching and manipulating literal RAtoms in target molecules.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Interpret ZAtoms Literally&lt;/b&gt;: Treat R atoms as literal atoms, rather than as attachment markers. Template (Z) atoms in queries are treated as A atoms attached by a bond which can be of any type (single, double, triple, or aromatic)&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Interpret StarAtoms Literally&lt;/b&gt;: Treat Star (*) atoms as literal atoms, rather than as query features.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;StarAtoms Can Map Hydrogens&lt;/b&gt;: Toggles whether Star (*) atoms can map hydrogen atoms.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Uncharged Atoms Can Map Charged Atoms</sci:legalval>
						<sci:legalval selected="true">NonChiral Queries are Enantiomers</sci:legalval>
						<sci:legalval selected="true">Chiral Queries Only Map Chiral Targets</sci:legalval>
						<sci:legalval selected="true">Ignore Stereo in 3D Queries</sci:legalval>
						<sci:value>Marked Isotopes Only Map Marked Isotopes</sci:value>
						<sci:value>Match Sgroups</sci:value>
						<sci:legalval selected="true">Check Bonds To RAtoms</sci:legalval>
						<sci:legalval>Match Sgroups</sci:legalval>
						<sci:legalval>Marked Isotopes Only Map Marked Isotopes</sci:legalval>
						<sci:legalval>Unmarked Isotopes Only Map Unmarked Isotopes</sci:legalval>
						<sci:legalval>Ignore Isotopes</sci:legalval>
						<sci:legalval>Use Localized Aromatic Bonds</sci:legalval>
						<sci:legalval>Stereo Atoms Can Map Nonstereo Atoms</sci:legalval>
						<sci:legalval>Match Cis Trans Double Bonds</sci:legalval>
						<sci:legalval>Ignore Reaction Mappings</sci:legalval>
						<sci:legalval>HFill if RAtoms Found</sci:legalval>
						<sci:legalval>Interpret RAtoms Literally</sci:legalval>
						<sci:legalval>Interpret ZAtoms Literally</sci:legalval>
						<sci:legalval>Interpret StarAtoms Literally</sci:legalval>
						<sci:legalval>StarAtoms Can Map Hydrogens</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>Return After First Map</sci:member>
						<sci:member>Separate Query Outputs</sci:member>
						<sci:member>Maximum Number of Maps</sci:member>
						<sci:member>Run Using Batch Size</sci:member>
						<sci:member>Reaction Matching Behavior</sci:member>
					</sci:arg>
					<sci:arg name="Return After First Map" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Return all mappings or just the first one discovered</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Separate Query Outputs" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Separate query outputs into separate properties or use the 
Query_Maps, Query_AllMapped, Query_Names properties for all queries</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Maximum Number of Maps" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the maximum number of atom-atom mappings to return for each query. Leave blank to return all the mappings.
&lt;p&gt;
If the maximum number of maps is reached for any of the queries, the property &lt;b&gt;MaxNumMapsReached&lt;/b&gt; is defined for the input molecule.</sci:help>
					</sci:arg>
					<sci:arg name="Run Using Batch Size" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>If a positive number is given, the queries are applied to the target molecules in batches of this size. Useful if you have tens of thousands of queries and want to avoid filling up all your memory. Depending on the size of your queries, batch sizes of 1,000 to 5,000 are reasonable.

 If left blank or set to 0, batching is not done; all queries are read into memory and the incoming molecules processed in a single pass.
</sci:help>
					</sci:arg>
					<sci:arg name="Reaction Matching Behavior" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Determines how reaction targets are matched against molecule queries.  Note these options do not apply for reaction queries.
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Reactants Or Products:&lt;/b&gt; Queries can match any part of the target reaction.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Reactants:&lt;/b&gt; Only the reactants are checked for a substructure match.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Products:&lt;/b&gt; Only the products are checked for a substructure match.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Reactants Not Products:&lt;/b&gt; Queries must match on the reactant side of the the target reaction, but not the product side.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Products Not Reactants:&lt;/b&gt; Queries must match on the product side of the the target reaction, but not the reactant side.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Reactants And Products:&lt;/b&gt; Queries must match the target reaction on both the reactant and product sides.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Reactants Or Products</sci:legalval>
						<sci:legalval>Reactants</sci:legalval>
						<sci:legalval>Products</sci:legalval>
						<sci:legalval>Reactants Not Products</sci:legalval>
						<sci:legalval>Products Not Reactants</sci:legalval>
						<sci:legalval>Reactants And Products</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Support Reactions" type="BoolType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:help>Toggles whether or not to support reactions as queries and targets.  Support for reactions increases the memory footprint of the component by a factor of between 2 and 3.  For most cases, the footprint will still be quite small, but if you are loading a large number of queries (more than a few thousand), then you&apos;ll see a substantial decrease in process size.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Mapping Engine" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Toggles whether to force one of the underlying mapping engines or to choose the engine based based upon features in the input query.</sci:help>
						<sci:legalval>SGMap</sci:legalval>
						<sci:legalval>FSMap</sci:legalval>
						<sci:legalval selected="true">Auto</sci:legalval>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Substructure Map</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/chemistry</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Wed Sep 05 12:08:28 2012</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Substructure Map</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>COMPONENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{1F593CE1-EAF3-4280-AA72-8582904D25DA}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2394 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Searches each molecule for the presence of one or more substructures</sci:value>
						<sci:value>The source of the queries are specified by &lt;i&gt;QuerySource&lt;/i&gt;.  Queries are either molecules in the input stream that have been tagged, as specified by &lt;i&gt;QueryTag&lt;/i&gt; or a list of files specified by &lt;i&gt;Source&lt;/i&gt;. The substructure searches are conducted on all other molecules on the input stream, which are passed unmodified through the Pass port.
Each query is mapped against all of the target molecules with the exception that markush queries are not matched against markush targets, only non-markush queries can be matched in this case.
&lt;p&gt;Several properties with mapping information can be added to each target molecule successfully mapped (only NumQueries and NumQueriesMapped can be added to target molecules that did not map any query, and atom and bond mappings and RMS deviation are not computed for markush targets):
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;NumQueries:&lt;/b&gt; The number of queries&lt;/li&gt;
&lt;li&gt;&lt;b&gt;NumQueriesMapped:&lt;/b&gt; The number of queries that successfully mapped&lt;/li&gt;
&lt;li&gt;&lt;b&gt;QueriesMapped:&lt;/b&gt; The name of the queries that successfully mapped&lt;/li&gt;
&lt;li&gt;&lt;b&gt;NumTimesQueriesMapped:&lt;/b&gt; The number of times each successfully mapped query mapped the target&lt;/li&gt;
&lt;li&gt;&lt;b&gt;AtomToAtomMaps:&lt;/b&gt; If &lt;i&gt;SeparateQueryOutputs&lt;/i&gt; is &apos;True&apos;, atom-to-atom mappings are added in properties that begin with the query name and end with &quot;_Maps&quot; or &quot;_AllMapped&quot;.
&lt;br&gt;
&quot;_Maps&quot; contains an array of the individual mappings. Each mapping contains the indices of the target atoms that map onto the corresponding query atoms.
&lt;br&gt;
&quot;_AllMapped&quot; contains the indices of all target atoms that are mapped by the query, in ascending order.
&lt;br&gt;
If &lt;i&gt;SeparateQueryOutputs&lt;/i&gt; is &apos;False&apos;, the individual mappings for all queries are placed in &lt;b&gt;Query_Maps&lt;/b&gt;, and the list of all mapped target atoms in &lt;b&gt;Query_AllMapped&lt;/b&gt;.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;BondToBondMaps:&lt;/b&gt; If &lt;i&gt;SeparateQueryOutputs&lt;/i&gt; is &apos;True&apos;, bond-to-bond mappings are added in properties that begin with the query name and end with &quot;_BondMaps&quot; or &quot;_AllBondsMapped&quot;.
&lt;br&gt;
&quot;_BondMaps&quot; contains an array of the individual mappings. Each mapping contains the indices of the target bonds that map onto the corresponding query bonds.
&lt;br&gt;
&quot;_AllBondsMapped&quot; contains the indices of all target bonds that are mapped by the query, in ascending order.
&lt;br&gt;
If &lt;i&gt;SeparateQueryOutputs&lt;/i&gt; is &apos;False&apos;, the individual mappings for all queries are placed in &lt;b&gt;Query_BondMaps&lt;/b&gt;, and the list of all mapped target bonds in &lt;b&gt;Query_AllBondsMapped&lt;/b&gt;.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;RMSD:&lt;/b&gt; Root mean squared deviation between the coordinates of the mapped atoms in the query and in the target. No alignment is performed between query and target. The rmsd is calculated using the original coordinates. This option is commonly used to calculate rmsd between prealigned molecules.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;See also: &lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For other structure mapping components that perform more specific tasks, see &lt;a href=&quot;javascript:DoLink(&apos;{D52672D9-3FE8-4744-AC49-C80E8CFCABE9}&apos;)&quot;&gt;Align Molecules using Substructure&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{95060EBC-BD8B-4940-9132-B8538B9FCF55}&apos;)&quot;&gt;Substructure Filter&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{9AE3F912-3B59-4658-946C-CEFEC278FB89}&apos;)&quot;&gt;Substructure Count&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{48307064-6A57-4E91-AFA1-C3BD09E9E351}&apos;)&quot;&gt;Exact Structure Map&lt;/a&gt;. &lt;/li&gt;
&lt;/ul&gt;
  </sci:value>
						<sci:value>Molecule</sci:value>
						<sci:value>Query (tagged) and non-query molecules</sci:value>
						<sci:value>Molecule</sci:value>
						<sci:value>Molecules with mapping properties</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.0.0.10</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>11</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Chemistry\Search and Similarity\Structure Mapping\Substructure Map</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.HighlightAtomsAndBonds.1">
				<sci:component name="Highlight Atoms" version="2">
					<sci:arg name="Property Name" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Name of the property that contains a list of atom numbers to highlight</sci:help>
						<sci:value>Query_Maps</sci:value>
					</sci:arg>
					<sci:arg name="Color" type="ColorType" required="false" visibility="visible" multi="false">
						<sci:help>Specify the color to use to highlight the atoms</sci:help>
						<sci:value>Fuchsia</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Highlight What" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Specify what to highlight, atoms or bonds (nevershow param)</sci:help>
						<sci:legalval selected="true">Atoms</sci:legalval>
						<sci:legalval>Bonds</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/chemistry</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Wed Jun 23 15:59:36 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{7592E5E9-AD96-4922-AED3-3C672A0FE322}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>COMPONENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="FragmentsToGenerate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Delete all atoms in the set</sci:help>
						<sci:value>DeleteAtoms</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Highlight Atoms</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Generate Fragments</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2682 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Highlights atoms in a molecule based on atom indices</sci:value>
						<sci:value>Atoms with indices specified by the property given by &lt;i&gt;Property Name&lt;/i&gt; are highlighted with the color provided by &lt;i&gt;Highlight Color&lt;/i&gt;.  The highlight information is stored on the atom property &lt;b&gt;HighlightColor&lt;/b&gt; and will be used by image components and molecular viewers to highlight the atoms appropriately.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To generate a property containing atom indices, use substructure components such as &lt;a href=&quot;javascript:DoLink(&apos;{DEF12DC2-CF95-11D4-9D0D-0050DA2F1AAC}&apos;)&quot;&gt;Substructure Filter from File&lt;/a&gt; &lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The analogous component for highlighting bonds is &lt;a href=&quot;javascript:DoLink(&apos;{ECCD0CBA-42D6-4430-A600-3855F9046544}&apos;)&quot;&gt;Highlight Bonds&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To manipulate properties stored on atoms, use &lt;a href=&quot;javascript:DoLink(&apos;{B380D0B9-62F9-4b2a-83AE-EEB9465E3F67}&apos;)&quot;&gt;Atom Properties&lt;/a&gt;.
&lt;/ul&gt;

</sci:value>
						<sci:value>Molecule</sci:value>
						<sci:value/>
						<sci:value>Molecule</sci:value>
						<sci:value>Molecules with the specified atoms highlighted</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>6.1.0.18</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>12</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Chemistry\Utilities\Molecular Utilities\Highlight Atoms</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Manipulator (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>RRemove(&apos;^Quer&apos;)</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Remove Mapping Properties</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2970 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Applies a PilotScript expression to each data record
</sci:value>
						<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.0.0.35</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>13</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Manipulators\Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="HTML Molecular Table Viewer" version="2">
					<sci:arg name="Maximum Rows" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the maximum number of table rows in the HTML page</sci:help>
						<sci:value>2000</sci:value>
					</sci:arg>
					<sci:arg name="Rows Per Page" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The number of rows displayed on each page.</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>The optional title at the top of the table.</sci:help>
					</sci:arg>
					<sci:arg name="Caption Property" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>The property used to display a caption for the picture. If this parameter is 
not defined, a caption is not displayed. </sci:help>
					</sci:arg>
					<sci:arg name="Freeze Table Header" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;When set to True, this table&apos;s header and title will remain visible when the table is scrolled vertically.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;This feature only applies to HTML reports.&lt;/li&gt;
	&lt;li&gt;The fixed header behavior depends on what container (e.g., plain browser window, Tile component, Dynamic Content Container) that the Table is piped into.&lt;/li&gt; 
	&lt;li&gt;To create a table of fixed pixel height, set this parameter to True and pipe this table into a Dynamic Content Container of fixed (i.e., non-percentage) height.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Include Live Molecule" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;If the &lt;i&gt;Include Live Molecule&lt;/i&gt; parameter is set to True and this component is piped into an HTML report, the image will be backed by live molecular data, so that double-clicking will open the chemistry in 3rd party sketcher software like Accelrys Draw (or ISIS/Draw) or ChemDraw. With &lt;i&gt;Include Live Molecule&lt;/i&gt; set to True, this component is equivalent to the read-only version of the &lt;a href=&quot;javascript:DoLink(&apos;{7415B28B-1606-4F6A-88B4-4BD4F5B1E1AD}&apos;)&quot;&gt;Chemistry Sketcher&lt;/a&gt; component. Its main advantage is scalability: multiple instances of this component may be included in a single HTML report without significantly affecting browser performance. Unlike the Chemistry Sketcher component, this component should not be used in forms, as the chemistry is not editable.&lt;/p&gt;

&lt;p&gt;You can right-click on the output image to copy the currently displayed chemistry to the clipboard or to change the preferred sketcher software to be opened when the image is double-clicked.&lt;/p&gt;

&lt;p&gt;This component uses a signed Java applet to launch 3rd party sketcher software. You will need to have the Java plug-in installed in your browser and will need to accept the Accelrys security certificate before using the applet. Whichever chemistry sketcher you are using (Accelrys Draw or ChemDraw) must be installed on the client machine in order to edit the molecule.&lt;/p&gt;

&lt;p&gt;When true, the image type will always be PNG, and the &lt;i&gt;Image Map Name&lt;/i&gt; and most of the &lt;i&gt;Links and Actions&lt;/i&gt; will be disabled.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Users with more than one of the Accelrys Draw or ISIS/Draw sketchers installed will see Accelrys Draw launched in preference to ISIS/Draw. Those sketchers should be run from the desktop at least once before the applet can properly launch them to display a molecule.&lt;/li&gt;
	&lt;li&gt;To create live, embedded chemistry in Office documents, use &lt;a href=&quot;javascript:DoLink(&apos;{DAA51EC2-CF25-48EA-A905-4004BE152BA1}&apos;)&quot;&gt;Office Chemistry Sketcher&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:member>Sketch Tool</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Sketch Tool" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The default sketcher application to launch when the user double clicks on the molecule.&lt;/p&gt;

&lt;p&gt;The sketcher type can be changed in the final report by right-clicking on the molecule image. Once a user has chosen a preferred sketcher via the right-click menu, their preference is stored in a cookie, and it supersedes what may be specified on this component.&lt;/p&gt;

&lt;p&gt;The sketcher type is global across all instances of this component in a report, and the default value will be taken from the first instance in the protocol.&lt;/p&gt;

&lt;p&gt;Users with more than one of the Accelrys Draw or ISIS/Draw sketchers installed will see Accelrys Draw launched in preference to ISIS/Draw. Those sketchers should be run from the desktop at least once before the applet can properly launch them to display a molecule.&lt;/p&gt;</sci:help>
						<sci:enabledscript>enabled := Parameter(&quot;Include Live Molecule&quot;) EQ &apos;True&apos;;
IF (NOT enabled) THEN
     SetDisabledDetails(&apos;This parameter is enabled only when Include Live Molecule is set to True.&apos;);
END IF;
enabled;</sci:enabledscript>
						<sci:legalval selected="true">Accelrys Draw or ISIS/Draw</sci:legalval>
						<sci:legalval>ChemDraw</sci:legalval>
					</sci:arg>
					<sci:arg name="Image Type" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>Format to use to represent the molecular image.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PNG&lt;/strong&gt;: Portable Network Graphics.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;JPEG&lt;/strong&gt;: Joint Photographic Experts Group.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SVG&lt;/strong&gt;: Scalable Vector Graphics.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">PNG</sci:legalval>
						<sci:legalval>JPEG</sci:legalval>
						<sci:legalval>SVG</sci:legalval>
					</sci:arg>
					<sci:arg name="ImageSize" type="LongType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Size of the square image, in pixels</sci:help>
						<sci:enabledscript>parameter(&apos;Molecule Scaling&apos;) eq &apos;Fixed Image Size&apos; or
parameter(&apos;Molecule Scaling&apos;) eq &apos;Fixed Image Size with Fixed Bond Length&apos;</sci:enabledscript>
						<sci:value>512</sci:value>
					</sci:arg>
					<sci:arg name="Molecule Scaling" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>How to scale the molecule to the desired image size.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Fixed Image Size&lt;/strong&gt;: the size of the images is the same for all the input molecules. The size of the image (in pixels) is controlled by &lt;i&gt;ImageSize&lt;/i&gt;, which specifies the width and height. The aspect ratio is set to 1 by default, but can be modified by &lt;i&gt;WidthToHeightRatio&lt;/i&gt; which sets the width as the height multiplied by the ratio. &lt;i&gt;MaximumBondLengthSize&lt;/i&gt; can be used to define a maximum limit for the length of the lines used to draw the bonds (to prevent very small molecules such as ethane to be drawn disproportionally big).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fixed Bond Length&lt;/strong&gt;: all the molecules are drawn with the same bond length, specified by &lt;i&gt;BondLengthSize&lt;/i&gt;. The image size depends on the size of the molecule. Small molecules create small images and big molecules create big images. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fixed Image Size with Fixed Bond Length&lt;/strong&gt;: the size of the images , specified by &lt;i&gt;ImageSize&lt;/i&gt;, is the same for all the input molecules but, if possible, the molecules are drawn using the bond length specified by &lt;i&gt;BondLengthSize&lt;/i&gt;. If the molecule can be drawn within the specified image size using the desired bond length, it is drawn like that, padding with white space as necessary. if the molecule is too big to be drawn with the desired bond length, it is scaled down to fit in the dimensions specified by image size. &lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:member>BondLengthSize</sci:member>
						<sci:member>WidthToHeightRatio</sci:member>
						<sci:member>MaximumBondLengthSize</sci:member>
						<sci:member>MaximumImageSize</sci:member>
						<sci:legalval selected="true">Fixed Image Size</sci:legalval>
						<sci:legalval>Fixed Bond Length</sci:legalval>
						<sci:legalval>Fixed Image Size with Fixed Bond Length</sci:legalval>
					</sci:arg>
					<sci:arg name="MaximumBondLengthSize" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Maximum size allowed for the lines used to draw the bonds in the molecule, in pixels. This parameter is used in conjunction with &lt;i&gt;ImageSize&lt;/i&gt; to set a limit to how long the bonds in the molecule can be. This is useful to prevent small molecules, such as ethane, to be drawn disproportionally big.
&lt;br&gt;
Leave empty if you don&apos;t want to set a limit to the bond length.</sci:help>
						<sci:enabledscript>parameter(&apos;Molecule Scaling&apos;) eq &apos;Fixed Image Size&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="MaximumImageSize" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Maximum size allowed for the image, in pixels. This parameter is used in conjunction with &lt;i&gt;BondLengthSize&lt;/i&gt; to set a limit to how big the image can be.
&lt;br&gt;
Leave empty if you don&apos;t want to set a limit to the image size.</sci:help>
						<sci:enabledscript>parameter(&apos;Molecule Scaling&apos;) eq &apos;Fixed Bond Length&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="BondLengthSize" type="LongType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Size of the average bond length, in pixels.&lt;/p&gt;
&lt;p&gt;
This parameter is used when &lt;i&gt;Molecule Scaling&lt;/i&gt; is set to &quot;Fixed Bond Length&quot; or &quot;Fixed Image Size with Fixed Bond Length&quot;.
&lt;p&gt;
The size of the image will not be constant. Bigger molecules generate larger images; smaller molecules generate smaller images.</sci:help>
						<sci:enabledscript>parameter(&apos;Molecule Scaling&apos;) eq &apos;Fixed Bond Length&apos; or
parameter(&apos;Molecule Scaling&apos;) eq &apos;Fixed Image Size with Fixed Bond Length&apos;</sci:enabledscript>
						<sci:value>35</sci:value>
					</sci:arg>
					<sci:arg name="WidthToHeightRatio" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>The ratio of the width to the height.  When not equal to 1.0, the image height is given by &lt;i&gt;ImageSize&lt;/i&gt; and the image width is scaled to fit the given &lt;i&gt;WidthToHeightRatio&lt;/i&gt;.</sci:help>
						<sci:enabledscript>parameter(&apos;Molecule Scaling&apos;) eq &apos;Fixed Image Size&apos; or
parameter(&apos;Molecule Scaling&apos;) eq &apos;Fixed Image Size with Fixed Bond Length&apos;</sci:enabledscript>
						<sci:value>1.0</sci:value>
					</sci:arg>
					<sci:arg name="Use Global Depiction Settings" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>When set to True, the depiction options are set based on the settings specified by &lt;i&gt;Global Depiction Settings&lt;/i&gt; and not from the component parameters.</sci:help>
						<sci:member>Global Depiction Settings</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Global Depiction Settings" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>
          Name of the XML file in the /apps/chemistry/xml/Objects folder with the global depiction settings.
          &lt;p&gt;
          The default XML file, with the same depiction settings as the default values of the component parameters, is &lt;i&gt;PPDepictionSettings_Defaults.xml&lt;/i&gt;.
          &lt;p&gt;
          Use &lt;a href=&quot;javascript:DoLink(&apos;{F8ED93E4-528D-43E7-A6E1-9D4A7EB161F9}&apos;)&quot;&gt;Export Depiction Parameters&lt;/a&gt; to modify and save depiction settings to use them as global settings.
        </sci:help>
						<sci:enabledscript>parameter(&quot;Use Global Depiction Settings&quot;) eq true</sci:enabledscript>
						<sci:legalvalscript>if @PPDepictionSettingsXML is not defined then
          @PPDepictionSettingsXML := RunProtocol(
          &apos;Components/Chemistry/Utilities/Reference Components/List Global Depiction Settings (Dynamic Parameter)&apos;,
          &apos;PPDepictionSettingsXML&apos;);
          end if;

          SetLegalValues(@PPDepictionSettingsXML);</sci:legalvalscript>
					</sci:arg>
					<sci:arg name="Depiction Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Options that control the molecular depictions</sci:help>
						<sci:member>Atoms</sci:member>
						<sci:member>Bonds</sci:member>
						<sci:member>Colors</sci:member>
						<sci:member>Fonts</sci:member>
						<sci:member>General</sci:member>
						<sci:member>Haptic/Markush</sci:member>
						<sci:member>Reactions</sci:member>
						<sci:member>Rgroups</sci:member>
						<sci:member>Sequences</sci:member>
						<sci:member>Sgroups</sci:member>
						<sci:member>StereoChemistry</sci:member>
						<sci:member>Zero Order Bonds</sci:member>
						<sci:enabledscript>parameter(&quot;Use Global Depiction Settings&quot;) eq False</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Atoms" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control the drawing of atoms and atom labels</sci:help>
						<sci:member>AtomLabelsScaleFactor</sci:member>
						<sci:member>DisplayHighlightedAtomsAs</sci:member>
						<sci:member>DrawImplicitHydrogens</sci:member>
						<sci:member>AtomLabelPadding</sci:member>
						<sci:member>Display Charge</sci:member>
						<sci:member>Display Valence</sci:member>
						<sci:member>Display Star Atoms As</sci:member>
						<sci:member>Display &apos;Pol&apos; Atoms As Circles</sci:member>
					</sci:arg>
					<sci:arg name="AtomLabelsScaleFactor" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Factor to scale the size of the atom labels (atom type, atom number, valence, value, charge). Set this factor to the default value of 1.0 to use the font size determined internally by PipelinePilot. Values greater than 1.0 will increase the font size. Values smaller than 1.0 will decrease the font size.  </sci:help>
						<sci:value>1.0</sci:value>
					</sci:arg>
					<sci:arg name="DisplayHighlightedAtomsAs" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Select how to highlight selected atoms.
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;ColoredBlocks:&lt;/b&gt;  Display a colored block superimposed on all the selected atoms.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;ColoredLabels:&lt;/b&gt;  Color all the selected atom labels with the same highlight color.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>ColoredBlocks</sci:legalval>
						<sci:legalval selected="true">ColoredLabels</sci:legalval>
					</sci:arg>
					<sci:arg name="DrawImplicitHydrogens" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>Defines which implicit Hydrogen atoms to draw:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;AllHydrogens:&lt;/b&gt;  Displays all implicit Hydrogen atoms (this option overrides the other options).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;HeteroHydrogens:&lt;/b&gt;  Displays implicit Hydrogen atoms on heteroatoms.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;TerminalCarbonHydrogens:&lt;/b&gt;  Displays implicit Hydrogen atoms on terminal Carbon atoms.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>AllHydrogens</sci:legalval>
						<sci:legalval selected="true">HeteroHydrogens</sci:legalval>
						<sci:legalval>TerminalCarbonHydrogens</sci:legalval>
					</sci:arg>
					<sci:arg name="AtomLabelPadding" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Padding size, in percentage of the average bond length, to use around atom type labels in the molecular image. This parameter controls how much white space to leave between atom type labels and the lines representing bonds.</sci:help>
						<sci:value>8</sci:value>
					</sci:arg>
					<sci:arg name="Display Charge" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specify whether or not to display non-zero atom charges</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Display Valence" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specify whether or not to display non-standard atom valences</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Display Star Atoms As" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>How to display unknown star (*) atoms
&lt;ul&gt;
&lt;li&gt;As a star (*).&lt;/li&gt;
&lt;li&gt;As a zigzag line.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>Zigzag Line</sci:legalval>
						<sci:legalval selected="true">Star (*)</sci:legalval>
					</sci:arg>
					<sci:arg name="Display &apos;Pol&apos; Atoms As Circles" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Whether or not to display &apos;Pol&apos; atom types as a circle. Whne set to False, these atoms are displayed using a &apos;Pol&apos; label.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Bonds" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control the drawing of bonds and bond labels</sci:help>
						<sci:member>DrawAromaticRings</sci:member>
						<sci:member>DisplayHighlightedBondsAs</sci:member>
						<sci:member>Draw Bond Query Labels</sci:member>
						<sci:member>Position of Bond Labels</sci:member>
						<sci:member>Bond Thickness</sci:member>
						<sci:member>Double Bond Width</sci:member>
						<sci:member>Wedge Bond Width</sci:member>
						<sci:member>Spacing of Down Bond Hashes</sci:member>
						<sci:member>DrawUnknownDoubleBonds</sci:member>
					</sci:arg>
					<sci:arg name="DrawAromaticRings" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>How to draw aromatic rings.
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;UsingSingleDoubleBonds:&lt;/b&gt;  A kekule representation using alternating single and double bonds.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;AsSolidCircles:&lt;/b&gt;  A solid circle is drawn inside the aromatic ring.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">UsingSingleDoubleBonds</sci:legalval>
						<sci:legalval>AsSolidCircles</sci:legalval>
					</sci:arg>
					<sci:arg name="DisplayHighlightedBondsAs" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>
          Select how to highlight selected bonds.
          &lt;ul&gt;
          &lt;li&gt;&lt;b&gt;ColoredLines:&lt;/b&gt;  Color all the selected bonds with the specified highlight color.&lt;/li&gt;
          &lt;li&gt;&lt;b&gt;ThickLines:&lt;/b&gt;  Use a thicker line to draw the selected bonds.&lt;/li&gt;
          &lt;li&gt;&lt;b&gt;ThickColoredLines:&lt;/b&gt;  Use a thicker line and the highlight color to draw the selected bonds.&lt;/li&gt;
          &lt;/ul&gt;
        </sci:help>
						<sci:legalval selected="true">ColoredLines</sci:legalval>
						<sci:legalval>ThickLines</sci:legalval>
						<sci:legalval>ThickColoredLines</sci:legalval>
					</sci:arg>
					<sci:arg name="Draw Bond Query Labels" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Whether or not to draw labels indicating the bond query types (s/d, s/a, d/a, ...)</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Position of Bond Labels" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies the position of bond labels, such as query bond types (any, s/d, s/a, d/a), topologies (Ch, Rn), or bond numbers. The labels are placed either at one side of the bond or on top of the bond.</sci:help>
						<sci:legalval>At One Side of the Bond</sci:legalval>
						<sci:legalval selected="true">On Top of the Bond</sci:legalval>
					</sci:arg>
					<sci:arg name="Bond Thickness" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specify the thickness of the lines used to represent bonds</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Double Bond Width" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the witdh of double bonds, as a fraction of the bond length</sci:help>
						<sci:value>0.2</sci:value>
					</sci:arg>
					<sci:arg name="Wedge Bond Width" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the witdh of stereo bond wedges, as a fraction of the bond length (including Either bonds)</sci:help>
						<sci:value>0.08</sci:value>
					</sci:arg>
					<sci:arg name="Spacing of Down Bond Hashes" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Specifies the spacing between the lines of down bond wedges</sci:help>
						<sci:value>4.0</sci:value>
					</sci:arg>
					<sci:arg name="DrawUnknownDoubleBonds" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>How to draw double bonds with unknown stereochemistry (such as in molecules read from SMILES); 
either &lt;b&gt;AsStandardDoubleBond&lt;/b&gt; or &lt;b&gt;AsCrossedLines&lt;/b&gt;.</sci:help>
						<sci:member>Include Double Bonds in Small Rings</sci:member>
						<sci:legalval>AsStandardDoubleBond</sci:legalval>
						<sci:legalval selected="true">AsCrossedLines</sci:legalval>
					</sci:arg>
					<sci:arg name="Include Double Bonds in Small Rings" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>If &lt;i&gt;False&lt;/i&gt; (the default), double bonds in small rings (size 7 or less) are never displayed as cross lines even if they are marked as unknown cis/trans stereo.</sci:help>
						<sci:enabledscript>parameter(&apos;DrawUnknownDoubleBonds&apos;) eq &apos;AsCrossedLines&apos;</sci:enabledscript>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Colors" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control the selection of colors to draw the structures</sci:help>
						<sci:member>UseColor</sci:member>
						<sci:member>Background Color</sci:member>
						<sci:member>Foreground Color</sci:member>
						<sci:member>Elements</sci:member>
					</sci:arg>
					<sci:arg name="UseColor" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>If set to true, the molecular image will be colored according to atom types.  If false, the image will be black and white only.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Background Color" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specify the background color to use to draw the image.
&lt;br&gt;
&lt;i&gt;Transparent&lt;/i&gt; should be set to &apos;False&apos; for this parameter to be active.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>White</sci:value>
					</sci:arg>
					<sci:arg name="Foreground Color" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specify the foreground color to use to draw the image.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) eq true</sci:enabledscript>
						<sci:value>Black</sci:value>
					</sci:arg>
					<sci:arg name="Elements" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:member>H</sci:member>
						<sci:member>Li</sci:member>
						<sci:member>B</sci:member>
						<sci:member>C</sci:member>
						<sci:member>N</sci:member>
						<sci:member>O</sci:member>
						<sci:member>F</sci:member>
						<sci:member>Na</sci:member>
						<sci:member>Mg</sci:member>
						<sci:member>Al</sci:member>
						<sci:member>Si</sci:member>
						<sci:member>P</sci:member>
						<sci:member>S</sci:member>
						<sci:member>Cl</sci:member>
						<sci:member>K</sci:member>
						<sci:member>Ca</sci:member>
						<sci:member>Se</sci:member>
						<sci:member>Br</sci:member>
						<sci:member>Sn</sci:member>
						<sci:member>I</sci:member>
						<sci:member>Fe</sci:member>
						<sci:member>Cu</sci:member>
						<sci:member>Ag</sci:member>
						<sci:member>Cd</sci:member>
						<sci:member>Au</sci:member>
						<sci:member>Hg</sci:member>
						<sci:member>Other</sci:member>
						<sci:member>Halogen</sci:member>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) eq true</sci:enabledscript>
					</sci:arg>
					<sci:arg name="H" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw H atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#00006E</sci:value>
					</sci:arg>
					<sci:arg name="Li" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Li atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#C87DF5</sci:value>
					</sci:arg>
					<sci:arg name="B" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw B atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#F0AA6E</sci:value>
					</sci:arg>
					<sci:arg name="C" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw C atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#6E6E6E</sci:value>
					</sci:arg>
					<sci:arg name="N" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw N atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#3250FF</sci:value>
					</sci:arg>
					<sci:arg name="O" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw O atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#F00A0A</sci:value>
					</sci:arg>
					<sci:arg name="F" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw F atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#8CD24B</sci:value>
					</sci:arg>
					<sci:arg name="Na" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Na atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#A050DC</sci:value>
					</sci:arg>
					<sci:arg name="Mg" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Mg atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#87FA00</sci:value>
					</sci:arg>
					<sci:arg name="Al" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Al atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#AF96A0</sci:value>
					</sci:arg>
					<sci:arg name="Si" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Si atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#F0C8A0</sci:value>
					</sci:arg>
					<sci:arg name="P" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw P atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#E67800</sci:value>
					</sci:arg>
					<sci:arg name="S" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw S atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#FFAF00</sci:value>
					</sci:arg>
					<sci:arg name="Cl" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Cl atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#1EE11E</sci:value>
					</sci:arg>
					<sci:arg name="K" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw K atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#9646D2</sci:value>
					</sci:arg>
					<sci:arg name="Ca" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Ca atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#32DC00</sci:value>
					</sci:arg>
					<sci:arg name="Se" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Se atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#FFAF28</sci:value>
					</sci:arg>
					<sci:arg name="Br" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Br atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#A02828</sci:value>
					</sci:arg>
					<sci:arg name="Sn" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Sn atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#5A6E6E</sci:value>
					</sci:arg>
					<sci:arg name="I" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw I atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#960096</sci:value>
					</sci:arg>
					<sci:arg name="Fe" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Fe atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#AF5A00</sci:value>
					</sci:arg>
					<sci:arg name="Cu" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Cu atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#C8823C</sci:value>
					</sci:arg>
					<sci:arg name="Ag" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Ag atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#B9B9B9</sci:value>
					</sci:arg>
					<sci:arg name="Cd" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Cd atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#FAD28C</sci:value>
					</sci:arg>
					<sci:arg name="Au" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Au atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#F0C81E</sci:value>
					</sci:arg>
					<sci:arg name="Hg" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw Hg atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>#AFAFC8</sci:value>
					</sci:arg>
					<sci:arg name="Other" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Color to use to draw all other atoms.</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>Black</sci:value>
					</sci:arg>
					<sci:arg name="Halogen" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Color to use to draw halogen atoms (F, Cl, Br,I). 
&lt;br&gt;
Default is Green (0,200,0)
&lt;br&gt;
The color can be defined as a string with three comma-separated integers between 0 and 255 representing the RGB numbers (example: 200,0,0) or as one of the predefined color names (Red, Green, Blue, Yellow, Cyan, Magenta, Black).</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>0,200,0</sci:value>
					</sci:arg>
					<sci:arg name="Fonts" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control the selection of fonts to draw the structures</sci:help>
						<sci:member>TrueType Font File</sci:member>
						<sci:member>SVG Font</sci:member>
						<sci:member>FixedFontSizeToDrawLabels</sci:member>
						<sci:member>MinimumFontSizeToDrawLabels</sci:member>
						<sci:member>Caption Font Size</sci:member>
						<sci:member>Chemistry Labels Font</sci:member>
						<sci:member>Captions Font</sci:member>
						<sci:member>Stereo Configuration Font</sci:member>
						<sci:member>Sequence Label Font</sci:member>
					</sci:arg>
					<sci:arg name="TrueType Font File" type="URLType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Path of the TrueType font to use to display the labels in the picture. Leave empty to use the default font.</sci:help>
					</sci:arg>
					<sci:arg name="SVG Font" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Font family to use to draw text in SVG images.
&lt;br&gt;
Enter any valid SVG font-family specification.
&lt;br&gt;
Leave empty to use default font (Arial, Helvetica)</sci:help>
					</sci:arg>
					<sci:arg name="FixedFontSizeToDrawLabels" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specify a fixed font size to be used to draw the text labels in the molecular image. Text labels include atom labels (atom type, charge, isotope, implicit hydrogens, query features and custom labels and numbers), bond labels (query features, custom labels and numbers), molecule caption, chiral flag and custom labels.
&lt;p&gt;
If a fixed font size is specified, the labels are always drawn with the same size, irrespective of the molecule size.
&lt;p&gt;
Leave blank to scale the font size based on the size of the molecule. </sci:help>
					</sci:arg>
					<sci:arg name="MinimumFontSizeToDrawLabels" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the minimum font size required to draw text labels for atoms, bonds and for the entire molecule (caption, chiral flag, etc). The font size used to draw these labels is calculated based on the size of the molecule. If it is smaller than the value of this parameter, labels are not drawn and heteroatoms are represented by circles with the color of the corresponding atom.
&lt;p&gt;
Leave blank to force the drawing of the text labels, even at very small font sizes.</sci:help>
						<sci:enabledscript>parameter(&apos;FixedFontSizeToDrawLabels&apos;) &lt;= 0</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Caption Font Size" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Font size to use to draw the captions.
&lt;p&gt;
Leave blank to calculate the size automatically based on the image size and the length of the caption</sci:help>
					</sci:arg>
					<sci:arg name="Chemistry Labels Font" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>
          Font to use to draw the structure labels for atoms, bonds, abbreviations and Sgroup data.
          &lt;p&gt;
          &lt;strong&gt;Note:&lt;/strong&gt;
          &lt;ul&gt;
          &lt;li&gt;On Windows systems, text labels are drawn differently for each of the fonts in the dropdown list. On Linux systems, the same font family is used for groups of fonts:
          &lt;ul&gt;
          &lt;li&gt;Arial&lt;/li&gt;
          &lt;li&gt;Bookman Old Style&lt;/li&gt;
          &lt;li&gt;Calibri, Cambria, Century Schoolbook, Garamond, Goudy Old Style, Lucida Console, MS Sans Serif, System, Tahoma, Verdana&lt;/li&gt;
          &lt;li&gt;Courier New&lt;/li&gt;
          &lt;li&gt;Times New Roman&lt;/li&gt;
          &lt;/ul&gt;
          &lt;/ul&gt;
        </sci:help>
						<sci:legalval selected="true">Arial</sci:legalval>
						<sci:legalval>Bookman Old Style</sci:legalval>
						<sci:legalval>Calibri</sci:legalval>
						<sci:legalval>Cambria</sci:legalval>
						<sci:legalval>Century Schoolbook</sci:legalval>
						<sci:legalval>Courier New</sci:legalval>
						<sci:legalval>Garamond</sci:legalval>
						<sci:legalval>Goudy Old Style</sci:legalval>
						<sci:legalval>Lucida Console</sci:legalval>
						<sci:legalval>MS Sans Serif</sci:legalval>
						<sci:legalval>System</sci:legalval>
						<sci:legalval>Tahoma</sci:legalval>
						<sci:legalval>Times New Roman</sci:legalval>
						<sci:legalval>Verdana</sci:legalval>
					</sci:arg>
					<sci:arg name="Captions Font" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>
          Font to use to draw the caption label
          &lt;p&gt;
          &lt;strong&gt;Note:&lt;/strong&gt;
          &lt;ul&gt;
          &lt;li&gt;On Windows systems, text labels are drawn differently for each of the fonts in the dropdown list. On Linux systems, the same font family is used for groups of fonts:
          &lt;ul&gt;
          &lt;li&gt;Arial&lt;/li&gt;
          &lt;li&gt;Bookman Old Style&lt;/li&gt;
          &lt;li&gt;Calibri, Cambria, Century Schoolbook, Garamond, Goudy Old Style, Lucida Console, MS Sans Serif, System, Tahoma, Verdana&lt;/li&gt;
          &lt;li&gt;Courier New&lt;/li&gt;
          &lt;li&gt;Times New Roman&lt;/li&gt;
          &lt;/ul&gt;
          &lt;/ul&gt;
        </sci:help>
						<sci:legalval selected="true">Arial</sci:legalval>
						<sci:legalval>Bookman Old Style</sci:legalval>
						<sci:legalval>Calibri</sci:legalval>
						<sci:legalval>Cambria</sci:legalval>
						<sci:legalval>Century Schoolbook</sci:legalval>
						<sci:legalval>Courier New</sci:legalval>
						<sci:legalval>Garamond</sci:legalval>
						<sci:legalval>Goudy Old Style</sci:legalval>
						<sci:legalval>Lucida Console</sci:legalval>
						<sci:legalval>MS Sans Serif</sci:legalval>
						<sci:legalval>System</sci:legalval>
						<sci:legalval>Tahoma</sci:legalval>
						<sci:legalval>Times New Roman</sci:legalval>
						<sci:legalval>Verdana</sci:legalval>
					</sci:arg>
					<sci:arg name="Stereo Configuration Font" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>
          Font to use to draw the stereochemistry labels
          &lt;p&gt;
          &lt;strong&gt;Note:&lt;/strong&gt;
          &lt;ul&gt;
          &lt;li&gt;On Windows systems, text labels are drawn differently for each of the fonts in the dropdown list. On Linux systems, the same font family is used for groups of fonts:
          &lt;ul&gt;
          &lt;li&gt;Arial&lt;/li&gt;
          &lt;li&gt;Bookman Old Style&lt;/li&gt;
          &lt;li&gt;Calibri, Cambria, Century Schoolbook, Garamond, Goudy Old Style, Lucida Console, MS Sans Serif, System, Tahoma, Verdana&lt;/li&gt;
          &lt;li&gt;Courier New&lt;/li&gt;
          &lt;li&gt;Times New Roman&lt;/li&gt;
          &lt;/ul&gt;
          &lt;/ul&gt;
        </sci:help>
						<sci:legalval selected="true">Arial</sci:legalval>
						<sci:legalval>Bookman Old Style</sci:legalval>
						<sci:legalval>Calibri</sci:legalval>
						<sci:legalval>Cambria</sci:legalval>
						<sci:legalval>Century Schoolbook</sci:legalval>
						<sci:legalval>Courier New</sci:legalval>
						<sci:legalval>Garamond</sci:legalval>
						<sci:legalval>Goudy Old Style</sci:legalval>
						<sci:legalval>Lucida Console</sci:legalval>
						<sci:legalval>MS Sans Serif</sci:legalval>
						<sci:legalval>System</sci:legalval>
						<sci:legalval>Tahoma</sci:legalval>
						<sci:legalval>Times New Roman</sci:legalval>
						<sci:legalval>Verdana</sci:legalval>
					</sci:arg>
					<sci:arg name="Sequence Label Font" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>
          Font to use to draw the sequence labels
          &lt;p&gt;
          &lt;strong&gt;Note:&lt;/strong&gt;
          &lt;ul&gt;
          &lt;li&gt;On Windows systems, text labels are drawn differently for each of the fonts in the dropdown list. On Linux systems, the same font family is used for groups of fonts:
          &lt;ul&gt;
          &lt;li&gt;Arial&lt;/li&gt;
          &lt;li&gt;Bookman Old Style&lt;/li&gt;
          &lt;li&gt;Calibri, Cambria, Century Schoolbook, Garamond, Goudy Old Style, Lucida Console, MS Sans Serif, System, Tahoma, Verdana&lt;/li&gt;
          &lt;li&gt;Courier New&lt;/li&gt;
          &lt;li&gt;Times New Roman&lt;/li&gt;
          &lt;/ul&gt;
          &lt;/ul&gt;
        </sci:help>
						<sci:legalval>Arial</sci:legalval>
						<sci:legalval>Bookman Old Style</sci:legalval>
						<sci:legalval>Calibri</sci:legalval>
						<sci:legalval>Cambria</sci:legalval>
						<sci:legalval>Century Schoolbook</sci:legalval>
						<sci:legalval selected="true">Courier New</sci:legalval>
						<sci:legalval>Garamond</sci:legalval>
						<sci:legalval>Goudy Old Style</sci:legalval>
						<sci:legalval>Lucida Console</sci:legalval>
						<sci:legalval>MS Sans Serif</sci:legalval>
						<sci:legalval>System</sci:legalval>
						<sci:legalval>Tahoma</sci:legalval>
						<sci:legalval>Times New Roman</sci:legalval>
						<sci:legalval>Verdana</sci:legalval>
					</sci:arg>
					<sci:arg name="General" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control general image settings</sci:help>
						<sci:member>Transparent</sci:member>
						<sci:member>Antialiasing</sci:member>
					</sci:arg>
					<sci:arg name="Transparent" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If set to true, the image will be transparent. If false, the image will have a white background.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Antialiasing" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether or not to use antialiasing when drawing graphic objects in the molecular image</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Haptic/Markush" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control the drawing of Markush bonds and Pi systems</sci:help>
						<sci:member>Haptic Bond Display</sci:member>
						<sci:member>Markush Attachment Point Shape</sci:member>
						<sci:member>Markush Color1</sci:member>
						<sci:member>Markush Color2</sci:member>
						<sci:member>Markush Color3</sci:member>
						<sci:member>Markush Color4</sci:member>
					</sci:arg>
					<sci:arg name="Haptic Bond Display" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Type of line to use to display Pi systems
&lt;ul&gt;
&lt;li&gt;Solid line.&lt;/li&gt;
&lt;li&gt;Dotted line.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Solid Line</sci:legalval>
						<sci:legalval>Dotted Line</sci:legalval>
					</sci:arg>
					<sci:arg name="Markush Attachment Point Shape" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Type of symbol to use to display the atoms representing Markush attachment points
&lt;ul&gt;
&lt;li&gt;Circle&lt;/li&gt;
&lt;li&gt;Square&lt;/li&gt;
&lt;li&gt;Star (*)&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Circle</sci:legalval>
						<sci:legalval>Square</sci:legalval>
						<sci:legalval>Star (*)</sci:legalval>
					</sci:arg>
					<sci:arg name="Markush Color1" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies the color to use for the atoms that would be attached to the first Markush bond (will cycle after the fourth Markush bond)</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>Red</sci:value>
					</sci:arg>
					<sci:arg name="Markush Color2" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies the color to use for the atoms that would be attached to the second Markush bond (will cycle after the fourth Markush bond)</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>Blue</sci:value>
					</sci:arg>
					<sci:arg name="Markush Color3" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies the color to use for the atoms that would be attached to the third Markush bond (will cycle after the fourth Markush bond)</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>Green</sci:value>
					</sci:arg>
					<sci:arg name="Markush Color4" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies the color to use for the atoms that would be attached to the fourth Markush bond (will cycle after the fourth Markush bond)</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>Orange</sci:value>
					</sci:arg>
					<sci:arg name="Reactions" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control the drawing of reactions</sci:help>
						<sci:member>Display Atom-Atom Mapping</sci:member>
						<sci:member>Display Reacting Center Marks</sci:member>
						<sci:member>Display Stereo Markers</sci:member>
					</sci:arg>
					<sci:arg name="Display Atom-Atom Mapping" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies whether or not to display the atom-atom mappings when depicting reactions</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Display Reacting Center Marks" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies how to display the reacting center marks of reactants and products when depicting reactions
&lt;ul&gt;
&lt;li&gt;Hash Marks (For Change)&lt;/li&gt;
&lt;li&gt;Color (For Change)&lt;/li&gt;
&lt;li&gt;Thicker (For Change)&lt;/li&gt;
&lt;li&gt;All Marks&lt;/li&gt;
&lt;li&gt;Off&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Hash Marks (For Change)</sci:legalval>
						<sci:legalval>Color (For Change)</sci:legalval>
						<sci:legalval>Thicker (For Change)</sci:legalval>
						<sci:legalval>All Marks</sci:legalval>
						<sci:legalval>Off</sci:legalval>
					</sci:arg>
					<sci:arg name="Display Stereo Markers" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies whether or not to display the stereo inversion and/or retention marks when depicting reactions</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Rgroups" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control the drawing of Rgroups</sci:help>
						<sci:member>Display Attachment Points As</sci:member>
						<sci:member>Maximum Number of Members to Display</sci:member>
					</sci:arg>
					<sci:arg name="Display Attachment Points As" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies how to display the attachment points in Rgroup fragments
&lt;ul&gt;
&lt;li&gt;Template (Z) Atoms&lt;/li&gt;
&lt;li&gt;Arrow and Star (*)&lt;/li&gt;
&lt;li&gt;Line and Zigzag line&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Template (Z) Atoms</sci:legalval>
						<sci:legalval>Arrow and Star (*)</sci:legalval>
						<sci:legalval>Line and Zigzag Line</sci:legalval>
					</sci:arg>
					<sci:arg name="Maximum Number of Members to Display" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies maximum number of Rgroup members to be defined. If the RG structure includes more members, it will simply display numbers of members.</sci:help>
						<sci:value>20</sci:value>
					</sci:arg>
					<sci:arg name="Sequences" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Depiction options that control the drawing of biological sequences</sci:help>
						<sci:member>Show Sequence View</sci:member>
						<sci:member>Chain Color - First</sci:member>
						<sci:member>Chain Color - Second</sci:member>
						<sci:member>Chain Color - Other</sci:member>
						<sci:member>Mutations Color</sci:member>
						<sci:member>Modifications Color</sci:member>
						<sci:member>Crosslinks Color - Default</sci:member>
						<sci:member>Crosslinks Color - Disulfide</sci:member>
						<sci:member>Crosslinks Color - Lactam</sci:member>
						<sci:member>Crosslinks Color - Lactone</sci:member>
						<sci:member>Sequence Block Size</sci:member>
						<sci:member>Sequence Wrap Length</sci:member>
						<sci:member>Spacing between Sequence Labels</sci:member>
						<sci:member>Spacing between Sequence Blocks</sci:member>
						<sci:member>Spacing between Sequence Lines</sci:member>
						<sci:member>Display Sequence Block Numbers</sci:member>
						<sci:member>Display Sequence Line Numbers</sci:member>
						<sci:member>Show Expanded Sequence Structure</sci:member>
					</sci:arg>
					<sci:arg name="Show Sequence View" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Shows sequence structure in the sequence view</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Chain Color - First" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Color of the chain in Sequence</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>144,238,144</sci:value>
					</sci:arg>
					<sci:arg name="Chain Color - Second" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Alternate color of the chain in Sequence</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>173,216,230</sci:value>
					</sci:arg>
					<sci:arg name="Chain Color - Other" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Color of other chain types like Signal Peptides in Sequence</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>245,222,179</sci:value>
					</sci:arg>
					<sci:arg name="Mutations Color" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>
          Color to use to draw mutated residues in the biopolymer sequence.
          &lt;br&gt;
          The color can be defined as a string with three comma-separated integers between 0 and 255 representing the RGB numbers (example: 200,0,0) or as one of the predefined color names (Red, Green, Blue, Yellow, Cyan, Magenta, Black).
        </sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>0,0,255</sci:value>
					</sci:arg>
					<sci:arg name="Modifications Color" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>
          Color to use to draw modified residues in the biopolymer sequence.
          &lt;br&gt;
          The color can be defined as a string with three comma-separated integers between 0 and 255 representing the RGB numbers (example: 200,0,0) or as one of the predefined color names (Red, Green, Blue, Yellow, Cyan, Magenta, Black).
        </sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>255,0,0</sci:value>
					</sci:arg>
					<sci:arg name="Crosslinks Color - Default" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Color of the crosslink in sequence</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>0,0,0</sci:value>
					</sci:arg>
					<sci:arg name="Crosslinks Color - Disulfide" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>
          Color of the disulfide bridges in the sequence
          &lt;br&gt;
          The color can be defined as a string with three comma-separated integers between 0 and 255 representing the RGB numbers (example: 200,0,0) or as one of the predefined color names (Red, Green, Blue, Yellow, Cyan, Magenta, Black).
        </sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>255,0,0</sci:value>
					</sci:arg>
					<sci:arg name="Crosslinks Color - Lactam" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Color of the crosslink that forms lactam bridge in sequence</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>0,0,255</sci:value>
					</sci:arg>
					<sci:arg name="Crosslinks Color - Lactone" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Color of the crosslink that forms lactone bridge in sequence</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>0,255,0</sci:value>
					</sci:arg>
					<sci:arg name="Sequence Block Size" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>If this value is greater than 0, sequence structure will be displayed as the sequence labels blocked in this size. &apos;0&apos; means no blocking.</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>10</sci:value>
					</sci:arg>
					<sci:arg name="Sequence Wrap Length" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>If this value is greater than 0, the sequence wraps to the next line after this number of sequence labels. &apos;0&apos; means no wrapping. </sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>40</sci:value>
					</sci:arg>
					<sci:arg name="Spacing between Sequence Labels" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Specifies spacing between sequence labels.</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>12.0</sci:value>
					</sci:arg>
					<sci:arg name="Spacing between Sequence Blocks" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies spacing between sequence blocks.</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>20.0</sci:value>
					</sci:arg>
					<sci:arg name="Spacing between Sequence Lines" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies spacing between sequence lines.</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:value>24.0</sci:value>
					</sci:arg>
					<sci:arg name="Display Sequence Block Numbers" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>If this setting is true and there is sequence block size set, colume number at the end of each block is displayed at the top of the sequence.</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Display Sequence Line Numbers" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>If this setting is true, multiple line Sequence is displayed with starting number at the beginning of each row of sequences. </sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Show Expanded Sequence Structure" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>If this setting is true, expanded sequence residue shows its explicit structure instead of label.</sci:help>
						<sci:enabledscript>parameter(&quot;Show Sequence View&quot;) eq true</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Sgroups" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control the drawing of Sgroups</sci:help>
						<sci:member>DrawFunctionalGroups</sci:member>
						<sci:member>FunctionalGroupsQueries</sci:member>
					</sci:arg>
					<sci:arg name="DrawFunctionalGroups" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Draw specific functional groups as text instead of the actual atoms and bonds.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The functional groups to draw are defined using substructure searching with queries contained in the directory specified by &lt;i&gt;FunctionalGroupsQueries&lt;/i&gt;. The default location of the functional group queries is /data/Queries/FunctionalGroups.&lt;/li&gt;
&lt;li&gt;Each functional group query mol file must define the text to be drawn, the text color, and the core atom that connects the functional group to the rest of the molecule. Only functional groups with a single core atom are allowed.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="FunctionalGroupsQueries" type="URLType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Location of the functional group queries. </sci:help>
						<sci:value>data\Queries\FunctionalGroups\*.mol</sci:value>
					</sci:arg>
					<sci:arg name="Stereochemistry" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control the drawing of stereochemistry labels</sci:help>
						<sci:member>Chirality Label Options</sci:member>
						<sci:member>Chirality Labels</sci:member>
					</sci:arg>
					<sci:arg name="Chirality Label Options" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>
          Specify the labels to use to identify the stereo configuration of the molecule. The chirality label is drawn at the top of the molecular image.
          &lt;ul&gt;
          &lt;li&gt;&lt;b&gt;Pipeline Pilot Defaults&lt;/b&gt;
          &lt;ul&gt;
          &lt;li&gt;All marked centers in one AND Enantiomer group: &apos;&apos; (no label).&lt;/li&gt;
          &lt;li&gt;All marked centers in one absolute group: &apos;Chiral&apos;.&lt;/li&gt;
          &lt;li&gt;All marked centers in one OR Enantiomer group: &apos;Chiral Unknown&apos;.&lt;/li&gt;
          &lt;li&gt;Marked centers in more than one stereogroup type: &apos;Relative&apos;.&lt;/li&gt;
          &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;b&gt;Accelrys Draw Defaults&lt;/b&gt;
          &lt;ul&gt;
          &lt;li&gt;All marked centers in one AND Enantiomer group: &apos;AND Enantiomer&apos;.&lt;/li&gt;
          &lt;li&gt;All marked centers in one absolute group: &apos;&apos; (no label).&lt;/li&gt;
          &lt;li&gt;All marked centers in one OR Enantiomer group: &apos;OR Enantiomer&apos;.&lt;/li&gt;
          &lt;li&gt;Marked centers in more than one stereogroup type: &apos;Mixed&apos;.&lt;/li&gt;
          &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;b&gt;Custom Labels&lt;/b&gt;
          &lt;br&gt;
          Comma-separated strings with the labels to use to identify the chiral state of molecule. Four strings should be defined, with labels corresponding to the chiral states described above for the Pipeline Pilot and Accelrys Draw defaults.
          &lt;ul&gt;
        </sci:help>
						<sci:legalval>Pipeline Pilot Defaults</sci:legalval>
						<sci:legalval selected="true">Accelrys Draw Defaults</sci:legalval>
						<sci:legalval>Custom Labels</sci:legalval>
					</sci:arg>
					<sci:arg name="Chirality Labels" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>
          Comma-separated strings with the labels to use to identify the chiral state of molecule. Four strings should be defined, with labels corresponding to the following chiral states:
          &lt;ul&gt;
          &lt;li&gt;All marked centers in one AND Enantiomer group.&lt;/li&gt;
          &lt;li&gt;All marked centers in one absolute group.&lt;/li&gt;
          &lt;li&gt;All marked centers in one OR Enantiomer group.&lt;/li&gt;
          &lt;li&gt;Marked centers in more than one stereogroup type.&lt;/li&gt;
          &lt;/ul&gt;

        </sci:help>
						<sci:validscript>#n := 0;
          #s := parameter();
          #len := stringlen(#s);
          for #i in 1 .. #len loop
          if substring(#s, #i, 1) eq &apos;,&apos; then
          #n++;
          end if;
          end loop;

          SetInvalidDetails(&apos;Must define four labels separated by commas&apos;);

          parameter(&apos;Chirality Label Options&apos;) eq &apos;Custom Labels&apos; and (#n eq 3)</sci:validscript>
						<sci:enabledscript>parameter(&apos;Chirality Label Options&apos;) eq &apos;Custom Labels&apos;</sci:enabledscript>
						<sci:value>AND Enantiomer,,OR Enantiomer, Mixed</sci:value>
					</sci:arg>
					<sci:arg name="Zero Order Bonds" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Depiction options that control the drawing of zero-order bonds (hydrogen and dative bonds)</sci:help>
						<sci:member>Hydrogen Bonds Color</sci:member>
						<sci:member>Dative Bonds Color</sci:member>
					</sci:arg>
					<sci:arg name="Hydrogen Bonds Color" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies the color to use to draw the lines that represent Hydrogen bonds</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>Black</sci:value>
					</sci:arg>
					<sci:arg name="Dative Bonds Color" type="ColorType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies the color to use to draw the lines that represent Dative bonds</sci:help>
						<sci:enabledscript>parameter(&quot;UseColor&quot;) = &quot;True&quot;</sci:enabledscript>
						<sci:value>Black</sci:value>
					</sci:arg>
					<sci:arg name="ShowAtomAndBondPropertiesTables" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>Toggles display of the &lt;b&gt;Atom Properties&lt;/b&gt; and &lt;b&gt;Bond Properties&lt;/b&gt; table columns.  When this parameter is active, the molecule for each row is scanned for atom and bond properties.  If any are found, tables of atom and/or bond properties are displayed.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
						<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
						<sci:value>temphtml</sci:value>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
						<sci:value>HTML Filename</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
						<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
						<sci:legalval>Cant Replace With Copy</sci:legalval>
						<sci:legalval>Cant Open</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>HTML Molecular Table Viewer</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>true</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>3258 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>VIEWERNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Generates and displays an HTML table page of molecules and properties</sci:value>
						<sci:value>&lt;p&gt;Each row of the table corresponds to one molecule record, with columns for the structure and each property.&lt;/p&gt;

&lt;p&gt;The first column of the resulting table contains an image of the molecule.  The input coordinates are used to create the image.  If no input coordinates are present (e.g. molecules imported from SMILES), then two dimensional coordinates will be internally generated using the &lt;i&gt;2D Coords&lt;/i&gt; component.&lt;/p&gt;

&lt;p&gt;The output table is a &quot;paged table&quot;.  That is, only &lt;i&gt;Rows Per Page&lt;/i&gt; records are displayed on each HTML page.  A number of links (e.g. &quot;Next&quot;, &quot;Previous&quot;) are present on each page to let you navigate between different ranges of the output.&lt;/p&gt;

&lt;p&gt;For molecules which have atom or bond properties, a table of that molecule&apos;s atom and bond properties can be displayed inside each row in the &lt;b&gt;Atom Properties&lt;/b&gt; and &lt;b&gt;Bond Properties&lt;/b&gt; columns.  The &lt;i&gt;ShowAtomAndBondPropertiesTable&lt;/i&gt; parameter toggles the generation and display of these tables.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Any grouped data is displayed in nested tables. If you prefer not to view the grouped data, use the &lt;a href=&quot;javascript:DoLink(&apos;{ACCDEEEF-FEED-4B27-B263-BA531EABFC9C}&apos;)&quot;&gt;Delete Children&lt;/a&gt; component with a blank &lt;i&gt;PackId Property&lt;/i&gt; parameter to remove it.&lt;/li&gt;
&lt;li&gt;Internally, the property &quot;PNG_Image&quot; is used for display of the molecular image.  If the &quot;PNG_Image&quot; property is preexisting on the input data record, it will be deleted and the image will be recalculated using the Chemistry Options specified here.  To preserve these properties, users can rename the property.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To write the HTML to a file, use the &lt;a href=&quot;javascript:DoLink(&apos;{AE1CFEA1-7CD1-408a-B7BB-58A55B6130C7}&apos;)&quot;&gt;HTML Molecular Table Writer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;To view an HTML page of molecules grouped by property or cluster, use &lt;a href=&quot;javascript:DoLink(&apos;{6049A843-46A8-4738-9DE5-C71AB92B3215}&apos;)&quot;&gt;HTML Molecular Grouped Viewer&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{583E555F-8343-42B5-B87D-77C6D21F9043}&apos;)&quot;&gt;HTML Molecular Cluster Viewer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Molecule</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.0.1.28</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="SelectedAtomsProperty" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The property name of a property containing a list of atom IDs to highlight in 
the image.</sci:help>
					</sci:arg>
					<sci:arg name="SelectedBondsProperty" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The property name of a property containing a list of bond IDs to highlight in 
the image.</sci:help>
					</sci:arg>
					<sci:arg name="HighlightColor" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>The highlight color for selected atoms or bonds</sci:help>
						<sci:legalval selected="true">Red</sci:legalval>
						<sci:legalval>Green</sci:legalval>
						<sci:legalval>Blue</sci:legalval>
						<sci:legalval>Yellow</sci:legalval>
						<sci:legalval>Cyan</sci:legalval>
						<sci:legalval>Magenta</sci:legalval>
						<sci:legalval>Black</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/chemistry</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Wed Jun 26 10:28:52 2013</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{485D30CD-737C-4AD3-89C9-F81CB20E47AE}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>14</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Chemistry\Data Access and Manipulation\Viewers\HTML Molecular Table Viewer</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="CSD Text Numeric Search" version="2">
					<sci:arg name="All Text" type="StringType" required="false" visibility="visible" multi="false">
						<sci:member>All Text Mode</sci:member>
						<sci:member>All Text Ignore Non-Alphanumeric</sci:member>
					</sci:arg>
					<sci:arg name="All Text Mode" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:legalval>not_null</sci:legalval>
						<sci:legalval selected="true">anywhere</sci:legalval>
						<sci:legalval>separate</sci:legalval>
						<sci:legalval>is_null</sci:legalval>
						<sci:legalval>exact</sci:legalval>
						<sci:legalval>start</sci:legalval>
						<sci:legalval>start_of_word</sci:legalval>
					</sci:arg>
					<sci:arg name="All Text Ignore Non-Alphanumeric" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Ignore non-alphanumeric parts of a hit.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Bioactivity" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>Parameter used to supply information about the bioactivity query. Multiple values may be supplied.</sci:help>
						<sci:member>Bioactivity Mode</sci:member>
						<sci:member>Bioactivity Ignore Non-Alphanumeric</sci:member>
					</sci:arg>
					<sci:arg name="Bioactivity Mode" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:legalval>not_null</sci:legalval>
						<sci:legalval selected="true">anywhere</sci:legalval>
						<sci:legalval>separate</sci:legalval>
						<sci:legalval>is_null</sci:legalval>
						<sci:legalval>exact</sci:legalval>
						<sci:legalval>start</sci:legalval>
						<sci:legalval>start_of_word</sci:legalval>
					</sci:arg>
					<sci:arg name="Bioactivity Ignore Non-Alphanumeric" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Ignore non-alphanumeric parts of a hit.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Citation" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>Citation Author</sci:member>
						<sci:member>Citation Journal</sci:member>
						<sci:member>Citation Year</sci:member>
						<sci:member>Citation Volume</sci:member>
						<sci:member>Citation First Page</sci:member>
						<sci:member>Citation Ignore Non-Alphanumeric</sci:member>
					</sci:arg>
					<sci:arg name="Citation Author" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The citation author.</sci:help>
					</sci:arg>
					<sci:arg name="Citation Journal" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The journal name, expressed as the standard short form. For example, the abbreviation for the Journal of Medicinal Chemistry is J.Med.Chem. This parameter will run a short validation on the entry, and will become invalid if the value is not found as suitable.</sci:help>
						<sci:validscript>If Parameter() Ne &apos;&apos; Then
	#valid := RunProtocol(&apos;Components/CSD/Utilities/Validate Journal Name&apos;, 
		&apos;is_valid&apos;, 
		&apos;Journal Name=&apos; . Parameter());
Else
	#valid := true;
End If;

SetInvalidDetails(ParameterName() . &apos; must contain the short abbreviation of a journal name (e.g. J.Med.Chem.)&apos;);
#valid;</sci:validscript>
						<sci:value>Acta Crystallogr.,Sect.B:Struct.Crystallogr.Cryst.Chem.</sci:value>
					</sci:arg>
					<sci:arg name="Citation Year" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The year of the citation. To express a range use the format &lt;code&gt;1998-2001&lt;/code&gt;.</sci:help>
					</sci:arg>
					<sci:arg name="Citation Volume" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The volume of the citation.</sci:help>
					</sci:arg>
					<sci:arg name="Citation First Page" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The first page of the citation entry.</sci:help>
					</sci:arg>
					<sci:arg name="Citation Ignore Non-Alphanumeric" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Ignore non-alphanumeric parts of a hit.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Color" type="StringType" required="false" visibility="visible" multi="false">
						<sci:member>Color Mode</sci:member>
						<sci:member>Color Ignore Non-Alphanumeric</sci:member>
					</sci:arg>
					<sci:arg name="Color Mode" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:legalval>not_null</sci:legalval>
						<sci:legalval selected="true">anywhere</sci:legalval>
						<sci:legalval>separate</sci:legalval>
						<sci:legalval>is_null</sci:legalval>
						<sci:legalval>exact</sci:legalval>
						<sci:legalval>start</sci:legalval>
						<sci:legalval>start_of_word</sci:legalval>
					</sci:arg>
					<sci:arg name="Color Ignore Non-Alphanumeric" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Ignore non-alphanumeric parts of a hit.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="CompoundName" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:member>CompoundName Mode</sci:member>
						<sci:member>CompoundName Ignore Non-Alphanumeric</sci:member>
					</sci:arg>
					<sci:arg name="CompoundName Mode" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:legalval>not_null</sci:legalval>
						<sci:legalval selected="true">anywhere</sci:legalval>
						<sci:legalval>separate</sci:legalval>
						<sci:legalval>is_null</sci:legalval>
						<sci:legalval>exact</sci:legalval>
						<sci:legalval>start</sci:legalval>
						<sci:legalval>start_of_word</sci:legalval>
					</sci:arg>
					<sci:arg name="CompoundName Ignore Non-Alphanumeric" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Ignore non-alphanumeric parts of a hit.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Synonym" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:member>Synonym Mode</sci:member>
						<sci:member>Synonym Ignore Non-Alphanumeric</sci:member>
					</sci:arg>
					<sci:arg name="Synonym Mode" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:legalval>not_null</sci:legalval>
						<sci:legalval selected="true">anywhere</sci:legalval>
						<sci:legalval>separate</sci:legalval>
						<sci:legalval>is_null</sci:legalval>
						<sci:legalval>exact</sci:legalval>
						<sci:legalval>start</sci:legalval>
						<sci:legalval>start_of_word</sci:legalval>
					</sci:arg>
					<sci:arg name="Synonym Ignore Non-Alphanumeric" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Ignore non-alphanumeric parts of a hit.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
						<sci:value>tmpOutput</sci:value>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="HasNoMode" type="StringType" required="true" visibility="visible" multi="true" uimpl="true">
						<sci:help>List of parameters with no mode option.</sci:help>
						<sci:legalval selected="true">Citation</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>CSD Text Numeric Search</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DatabaseNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{588AD664-4296-4755-B523-1C37173EC07D}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -470</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>CSD Text Numeric Search</sci:value>
						<sci:value>&lt;p&gt;
Perform a text numeric search against the CSD and produce a stream of CSD refcodes for the hits found by the search.&lt;/p&gt;
&lt;p&gt;The query is built from &lt;i&gt;Query Term&lt;/i&gt; parameter on the component. Each term consists of a field, an operator, and a value. For example:
&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ChemicalName Contains Indole&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
This is internally translated to the appropriate query term:
&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ChemicalName Like &apos;%Indole%&apos;&lt;/pre&gt;&lt;/code&gt;
&lt;p&gt;
Multiple terms are combined using a logical AND operator. That is:
&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ChemicalName Like &apos;%Indole%&apos; AND MeltingPoint &amp;lt; 110&lt;/code&gt;&lt;/pre&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.1.0.13</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>ccdc/csd</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Jan 19 13:15:20 2017</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>7</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\CSD\Readers\CSD Text Numeric Search</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Tag Data" version="2">
					<sci:arg name="TagName" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Name of a new property to create to serve as a tag</sci:help>
						<sci:value>B</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
					</sci:arg>
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
						<sci:value>Property(&apos;$(TagName)&apos;) := true;</sci:value>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)
</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="nevershow" multi="false">
						<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Sep 15 09:21:22 2006</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Tag Data</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>COMPONENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Evaluate Expression</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{BCF71EB2-1ED7-4B27-B263-BA531EABFC9C}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>378 -470</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Tags data records with a specified property name for later identification</sci:value>
						<sci:value>&lt;p&gt;For each incoming data record, a new property is created and assigned a value of True.  The name of the property is specified by &lt;i&gt;TagName&lt;/i&gt;.  Data records tagged in this way can be identified in downstream components by checking whether the property is defined. This is useful for marking a data stream prior to combining it with other streams for learning or other operations.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;An alternative method for tagging records is available in most reader component by using &lt;i&gt;SourceTag&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To remove a tag, use &lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;To separate tagged data records into a separate data stream, use &lt;a href=&quot;javascript:DoLink(&apos;{F69870E0-BAF7-43E4-8B09-F53C47DB94F3}&apos;)&quot;&gt;Remove Tagged Filter&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To group data together by tag for use in run-to-completion subprotocols, use &lt;a href=&quot;javascript:DoLink(&apos;{3FDE8197-D86F-4EB0-99FF-82D6430AF466}&apos;)&quot;&gt;Group Data by Tag&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records with the additional tag property</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>6.0.0.46</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>8</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Components\Data Access and Manipulation\Manipulators\Tag Data</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:connectid from="0" to="1" type="true"/>
			<sci:connectid from="1" to="2" type="true"/>
			<sci:connectid from="2" to="3" type="true"/>
			<sci:connectid from="3" to="4" type="true"/>
			<sci:connectid from="4" to="5" type="true"/>
			<sci:connectid from="5" to="6" type="true"/>
			<sci:connectid from="6" to="10" type="true"/>
			<sci:connectid from="10" to="11" type="true"/>
			<sci:connectid from="11" to="12" type="true"/>
			<sci:connectid from="12" to="13" type="true"/>
			<sci:connectid from="13" to="14" type="true"/>
			<sci:connectid from="7" to="8" type="true"/>
			<sci:connectid from="8" to="3" type="true"/>
			<sci:version iVal="1"/>
		</sci:protocol>
	</sci:dbitem>
</sci:data>
