########################################################################################################################
#
# This script can be used for any purpose without limitation subject to the
# conditions at https://www.ccdc.cam.ac.uk/Community/Pages/Licences/v2.aspx
#
# This permission notice and the following statement of attribution must be
# included in all copies or substantial portions of this script.
#
# 2025-05-02: shared by the Cambridge Crystallographic Data Centre
#
########################################################################################################################

# Configuration file for the CSD Pipeline Pilot Component Collection

vendor		CCDC
name		CSD Pipeline Pilot Component Collection
version		#VER_NUM

xml		$(package)/xml

<global editable="true"> 
	# Location of the python executable.
	python_home
	
	# List of CSD instances to use. 
	# The list of names displayed to the user, expressed in comma separated list.
	# Note that the CSD Database parameter is optional. When blank the API will search the default database
	# but it is a good idea to list this option all the same, especially if multiple databases are to be listed.
	# An empty list is fine - and simply means that the search components may only search the local instance.
	csd_names	
	
	# The list of file paths to the sqlite files associated with the above names, expressed in a comma separated list.
	# Each path here should be accessible to the Pipeline Pilot process (recall that this may run as a service account
	# so will more than likely have different network permissions to an account logged into this server).
	# Note that as these values are used in Python, it is a good idea to use forward slashes, even on Windows, or
	# to escape backslashes.
	# e.g.
	# D:/Program Files (x86)/CCDC/CSD_2017/CSD V5.38/as538be_ASER.sqlite
	# or 
	# D:\\Program Files (x86)\\CCDC\\CSD_2017\\CSD V5.38\\as538be_ASER.sqlite
	csd_file_paths	
	
	# If no CSD Database option is selected, which database path should be used?
	# If blank, this is equivalent to searching 'CSD'. Alternatively a path can be added to a particular 
	# dataset.
	default_database	
</global>

# For now, we only have one combined document that comprises both the installation instructions and user
# guide; this will be split into separate User- and Administrator-focussed documents in the next release.

<helpDoc UserGuide>
	Location	$(package)/docs/pipeline_pilot_component_collection.pdf
	Title		User Guide: CSD Pipeline Pilot Component Collection
</helpDoc>

<helpDoc AdminGuide>
	Location	$(package)/docs/pipeline_pilot_component_collection.pdf
	Title		Installation and Configuration: CSD Pipeline Pilot Component Collection
</helpDoc>

# Runs a Python script to check that all licenses required by the various components in this package are found.
# These are specifically, a license for CSD generally, CSD-Materials, and CSD-Discovery.

<onInstall>
	Command		python	"$(package)/lang/python/license_check.py"
	StdOut		$(package)/logs/install.log
	StdErr		$(package)/logs/errors.err
</onInstall>

# Using the data directive with the 'browsable' attribute seems to be necessary to make the CSD Pipeline Pilot Component
# Collection Data directory appear under Server Shortcuts in the Shortcuts panel of the Pipeline Pilot client's file browser.

<data browsable>
        $(package)/dataroot
</data>

# Install the environment setup file. Note that, prior to running pkgutil, the the environment valriable CSDHOME
# must be set to the full path of the CSD_YYYY directory (where YYYY is the the release year).

<onInstall os="linux">
	# Command	bash $(package)/lang/bash/ccdc_env.sh
	Command	cat $(package)/lang/bash/ccdc_env.sh | tr -d '\015' | PACKAGE_DIR=$(package) bash  # Run script, ignoring Windows line endings
	StdOut	$(package)/logs/install.log
	StdErr	$(package)/logs/errors.err
</onInstall>

<onUninstall os="linux">
	Delete	-filelist "$(package)/logs/installed_files.txt"
	StdOut	$(package)/logs/install.log
	StdErr	$(package)/logs/errors.err
</onUninstall>
